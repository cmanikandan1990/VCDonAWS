{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is intended to be deployed into an existing VPC with two public subnets. It will create two auto-scaling groups, one for vCD UI Cells and one for vCD Console Proxy Cells.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Binary Details"
                    },
                    "Parameters": [
                        "vCDBuildBucketName",
                        "vCDBuildName"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Cells Common Configuration"
                    },
                    "Parameters": [
                        "KeyPairNameEC2",
                        "EC2AMIOS",
                        "PrivateInstanceSecurityGroupID",
                        "RDSAccessSecurityGroupID",
                        "CellsAccessSecurityGroupID",
                        "xFerAccessSecurityGroupID",
                        "vCDKeystoreFileName",
                        "vCDCertKeystorePasswd"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD UI Cells Configuration"
                    },
                    "Parameters": [
                        "vCDUIInstanceType",
                        "vCDUIVolumeSize",
                        "NumVCDUICells",
                        "vCDUIJXMS",
                        "vCDUIJXMX"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Console Cells Configuration"
                    },
                    "Parameters": [
                        "vCDConsoleInstanceType",
                        "vCDConsoleVolumeSize",
                        "NumVCDConsoleCells",
                        "vCDConsoleJXMS",
                        "vCDConsoleJXMX"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD ELB Parameters"
                    },
                    "Parameters": [
                        "vCDUITargetGroup",
                        "vCDConsoleTargetGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "Log Groups and Retention Policy"
                    },
                    "Parameters": [
                        "MessagesLogGroup",
                        "CellLogGroup",
                        "ConsoleProxyLogGroup",
                        "vCloudContainerDebugLogGroup"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyPairNameEC2": {
                    "default": "Key Pair Name for all vCD Cells"
                },
                "EC2AMIOS": {
                    "default": "vCD EC2 AMI Operating System"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet 1"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet 2"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "PrivateInstanceSecurityGroupID": {
                    "default": "SSH Access from Bastion hosts"
                },
                "RDSAccessSecurityGroupID": {
                    "default": "Access to RDS Database"
                },
                "CellsAccessSecurityGroupID": {
                    "default": "Access to vCD Cells"
                },
                "xFerAccessSecurityGroupID": {
                    "default": "Security Group to Allow Access the vCD Transfer Server"
                },
                "vCDBuildBucketName" : {
                  "default" : "S3 Bucket Name"
                },
                "vCDBuildName" : {
                  "default" : "vCD Binary"
                },
                "vCDKeystoreFileName" : {
                    "default" : "vCD Java Certificate Keystore filename"
                },
                "vCDCertKeystorePasswd" : {
                    "default" : "vCD Java Keystore Password"
                },
                "vCDUIInstanceType": {
                    "default" : "vCD UI Cells Instance Type"
                },
                "vCDConsoleInstanceType": {
                    "default" : "vCD Console Cells Instance Type"
                },
                "NumVCDUICells": {
                    "default" : "Number of vCD UI Cells"
                },
                "NumVCDConsoleCells": {
                    "default" : "Number of vCD Console Cells"
                },
                "vCDUITargetGroup": {
                    "default" : "vCD UI ELB Target Group"
                },
                "vCDConsoleTargetGroup": {
                    "default" : "vCD Console ELB Target Group"
                },
                "vCDUIVolumeSize": {
                    "default" : "vCD UI Cells root volume size"
                },
                "vCDConsoleVolumeSize": {
                    "default" : "vCD Console Cells root volume size"
                },
                "MessagesLogGroup": {
                    "default" : "Group ID for /var/log/messages"
                },
                "CellLogGroup": {
                    "default" : "Group ID for cell.log"
                },
                "ConsoleProxyLogGroup": {
                    "default" : "Group ID for console-proxy.log" 
                },
                "vCloudContainerDebugLogGroup": {
                    "default" : "Group ID for vcloud-container-debug.log"
                },
                "vCDUIJXMS": {
                    "default" : "Initial vCD Java Heap Size"
                },
                "vCDUIJXMX": {
                    "default" : "Maximum vCD Java Heap Size" 
                },
                "vCDConsoleJXMS": {
                    "default" : "Initial vCD Java Heap Size" 
                },
                "vCDConsoleJXMX": {
                    "default" : "Maximum vCD Java Heap Size"
                }
            }
        }
    },
    "Parameters": {
        "KeyPairNameEC2": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "EC2AMIOS": {
            "AllowedValues": [
                "CentOS-7-HVM"
            ],
            "Default": "CentOS-7-HVM",
            "Description": "The Linux distribution for the AMI to be used for the EC2 instances",
            "Type": "String"
        },
        "vCDUIInstanceType": {
            "AllowedValues": [
                "t2.small",
                "m5.large",
                "m5.xlarge"
            ],
            "Default": "m5.large",
            "Description": "Amazon EC2 instances type",
            "Type": "String"
        },
        "vCDConsoleInstanceType": {
            "AllowedValues": [
                "t2.small",
                "m5.large",
                "m5.xlarge"
            ],
            "Default": "m5.large",
            "Description": "Amazon EC2 instances type",
            "Type": "String"
        },
        "vCDUIVolumeSize": {
            "Default": "16",
            "Description": "Amazon EC2 Instance Root Volume Size GB",
            "Type": "String"
        },
        "vCDConsoleVolumeSize": {
            "Default": "16",
            "Description": "Amazon EC2 Instance Root Volume Size GB",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the public subnet 1 that you want to provision the EC2 insteaces in the first AZ (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the public subnet 2 that you want to provision the EC2 insteaces in the first AZ (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "PrivateInstanceSecurityGroupID": {
            "Description": "Security Group to Allow SSH Access from Bastion hosts",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "RDSAccessSecurityGroupID": {
            "Description": "Security Group to Allow Access to vCD Postgres RDS Database.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "CellsAccessSecurityGroupID": {
            "Description": "Select the Security Group that allows access to VCD cells.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "xFerAccessSecurityGroupID": {
            "Description": "Select the Security Group that allows access to VCD Transfer Server.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "vCDBuildBucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "vcd-builds",
            "Description": "Bucket name that holds the VCD build to be used by this stack.",
            "Type": "String"
        },
        "vCDBuildName": {
            "Default": "vmware-vcloud-director-distribution-9.1.0-7905839.bin",
            "Description": "Specify the vCD binary filename name.",
            "Type": "String"
        },
        "vCDKeystoreFileName": {
            "Default": "certificates.ks",
            "Description": "Specify the vCD Java certifikate keystore filename name. The template assumes the response files is stored in the same S3 bucket as the vCD binary.",
            "Type": "String"
        },
        "vCDCertKeystorePasswd": {
            "NoEcho": "true",
            "Description": "vCD Certificates Keystore Password. Minimum of 8 alphanumeric characters.",
            "Type": "String",
            "MinLength": "8"
        },
        "NumVCDUICells": {
            "AllowedValues": [
                "1",
                "2",
                "4"
            ],
            "Default": "2",
            "Description": "Enter the number of vCD UI Cells to create.",
            "Type": "String"
        },
        "NumVCDConsoleCells": {
            "AllowedValues": [
                "1",
                "2",
                "4"
            ],
            "Default": "2",
            "Description": "Enter the number of vCD Console Cells to create.",
            "Type": "String"
        },
        "vCDUITargetGroup": {
            "Description": "Arn of the vCD UI ELB Target Group.",
            "Type": "String"
        },
         "vCDConsoleTargetGroup": {
             "Description": "Arn of the vCD Console ELB Target Group.",
             "Type": "String"
        },
        "MessagesLogGroup": {
            "Description": "CloudWatch Group Name for /var/log/messages.",
            "Type": "String"
        },
        "CellLogGroup": {
            "Description": "CloudWatch Group Name for cell.log.",
            "Type": "String"
        },
        "ConsoleProxyLogGroup": {
            "Description": "CloudWatch Group Name for console-proxy.log.",
            "Type": "String"
        },
        "vCloudContainerDebugLogGroup": {
            "Description": "CloudWatch Group Name for vcloud-container-debug.log.",
            "Type": "String"
        },
        "vCDUIJXMS": {
            "Description": "vCD Java Heap Size initial memory allocation pool. Enter value in MB!",
            "Default": "1024",
            "Type": "Number" 
        },
        "vCDUIJXMX": {
            "Description": "vCD Java Heap Size maximum memory allocation pool. Enter value in MB!",
            "Default": "4096",
            "Type": "Number" 
        },
        "vCDConsoleJXMS": {
            "Description": "vCD Java Heap Size initial memory allocation pool. Enter value in MB!",
            "Default": "1024",
            "Type": "Number" 
        },
        "vCDConsoleJXMX": {
            "Description": "vCD Java Heap Size maximum memory allocation pool. Enter value in MB!",
            "Default": "4096",
            "Type": "Number" 
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must exist in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "CENTOS7HVM": "CentOS Linux 7 x86_64 HVM EBS ENA 2002_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-0042af67f8e4dcc20.4"
            },
            "eu-central-1": {
                "CENTOS7HVM": "ami-0e8286b71b81c3cc1"
            },
            "eu-west-1": {
                "CENTOS7HVM": "ami-0b850cf02cc00fdc8"
            },
            "eu-west-2": {
                "CENTOS7HVM": "ami-09e5afc68eed60ef4"
            },
            "eu-west-3": {
                "CENTOS7HVM": "ami-0cb72d2e599cffbf9"
            },
            "us-east-1": {
                "CENTOS7HVM": "ami-0affd4508a5d2481b"
            },
            "us-east-2": {
                "CENTOS7HVM": "ami-01e36b7901e884a10"
            },
            "us-west-1": {
                "CENTOS7HVM": "ami-098f55b4287a885ba"
            },
            "us-west-2": {
                "CENTOS7HVM": "ami-0bc06212a56393ee1"
            }
        },
        "LinuxAMINameMap": {
            "CentOS-7-HVM": {
                "Code": "CENTOS7HVM"
            }
        }
    },
    "Resources": {
        "vCDCellsAccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
            "AssumeRolePolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": [ "ec2.amazonaws.com" ]
                    },
                    "Action": [ "sts:AssumeRole" ]
                } ]
            },
            "Path": "/"
            }
        },
        "vCDCellS3AccessPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
            "PolicyName": "s3-Access",
            "PolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Action": [
                        "s3:GetObject",
                        "s3:PutObject"
                    ],
                    "Resource": "*"
                } ]
            },
            "Roles": [ { "Ref": "vCDCellsAccessRole" } ]
            }
        },
        "vCDCellEC2DescribePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
            "PolicyName": "EC2-Describe",
            "PolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Action": "ec2:Describe*",
                    "Resource": "*"
                } ]
            },
            "Roles": [ { "Ref": "vCDCellsAccessRole" } ]
            }
        },
        "vCDCellCloudWatchPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
            "PolicyName": "CloudWatch-Access",
            "PolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogStream",
                        "logs:GetLogEvents",
                        "logs:PutLogEvents",
                        "logs:DescribeLogGroups",
                        "logs:DescribeLogStreams",
                        "logs:PutRetentionPolicy",
                        "logs:PutMetricFilter",
                        "logs:CreateLogGroup"
                    ],
                    "Resource": [
                        "arn:aws:logs:*:*:*"
                    ]
                } ]
            },
            "Roles": [ { "Ref": "vCDCellsAccessRole" } ]
            }
        },
        "vCDCellsInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "vCDCellsAccessRole"
                    }
                ],
                "Path": "/"
            }
        },
        "vCDUIAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "vCDUILaunchConfiguration"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PrivateSubnet1ID"
                    },
                    {
                        "Ref": "PrivateSubnet2ID"
                    }
                ],
                "MinSize": {
                    "Ref": "NumVCDUICells"
                },
                "MaxSize": {
                    "Ref": "NumVCDUICells"
                },
                "Cooldown": "300",
                "DesiredCapacity": {
                    "Ref": "NumVCDUICells"
                },
                "TargetGroupARNs" : [
                    {
                      "Ref" : "vCDUITargetGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "vCD UI Cell",
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "NumVCDUICells"
                    },
                    "Timeout": "PT30M"
                }
            }
        },
        "vCDConsoleAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "vCDConsoleLaunchConfiguration"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PrivateSubnet1ID"
                    },
                    {
                        "Ref": "PrivateSubnet2ID"
                    }
                ],
                "MinSize": {
                    "Ref": "NumVCDConsoleCells"
                },
                "MaxSize": {
                    "Ref": "NumVCDConsoleCells"
                },
                "Cooldown": "300",
                "DesiredCapacity": {
                    "Ref": "NumVCDConsoleCells"
                },
                "TargetGroupARNs" : [
                    {
                      "Ref" : "vCDConsoleTargetGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "vCD Console Cell",
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "NumVCDConsoleCells"
                    },
                    "Timeout": "PT30M"
                }
            }
        },
        "vCDUILaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "vCDCellsAccessRole"
                        },
                        "buckets": [ "vcd-cf-templates" ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/vcd_cells_bootstrap.sh": {
                                "source": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vcd_cells_bootstrap.sh",
                                "mode": "000550",
                                "owner": "root",
                                "group": "root",
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "b-bootstrap": {
                                "command": "./tmp/vcd_cells_bootstrap.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPairNameEC2"
                },
                "IamInstanceProfile": {
                    "Ref": "vCDCellsInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "LinuxAMINameMap",
                                {
                                    "Ref": "EC2AMIOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "BlockDeviceMappings": [
                    {
                      "DeviceName": "/dev/sda1",
                      "Ebs": {
                        "VolumeType": "gp2",
                        "DeleteOnTermination": true,
                        "VolumeSize": {
                            "Ref": "vCDUIVolumeSize"
                        }
                      }
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "PrivateInstanceSecurityGroupID"
                    },
                    {
                        "Ref": "CellsAccessSecurityGroupID"
                    },
                    {
                        "Ref": "RDSAccessSecurityGroupID"
                    },
                    {
                        "Ref": "xFerAccessSecurityGroupID"
                    }
                ],
                "InstanceType": {
                    "Ref": "vCDUIInstanceType"
                },
                "UserData": {
                  "Fn::Base64": {
                    "Fn::Join": [
                      "",
                      [
                        "#!/bin/bash\n",
                        "yum update -y\n",
                        "yum install -y epel-release\n",
                        "yum install nfs-utils lvm2 python-pip rpm-build postgresql automake fuse fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel git alsa-lib libICE libSM libX11 libXau libXdmcp libXext libXi libXt libXtst pciutils redhat-lsb wget -y\n",
                        "pip install --upgrade pip\n",
                        "pip install awscli --ignore-installed six\n",
                        "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                        "VPCID=",
                        {
                            "Ref": "VPCID"
                        },
                        "\n",
                        "vCDBuildBucketName=",
                        {
                            "Ref": "vCDBuildBucketName"
                        },
                        "\n",
                        "vCDBuildName=",
                        {
                            "Ref": "vCDBuildName"
                        },
                        "\n",
                        "vCDKeystoreFileName=",
                        {
                            "Ref": "vCDKeystoreFileName"
                        },
                        "\n",
                        "vCDCertKeystorePasswd=",
                        {
                            "Ref": "vCDCertKeystorePasswd"
                        },
                        "\n",
                        "MessagesLogGroup=",
                        {
                            "Ref": "MessagesLogGroup"
                        },
                        "\n",
                        "CellLogGroup=",
                        {
                            "Ref": "CellLogGroup"
                        },
                        "\n",
                        "ConsoleProxyLogGroup=",
                        {
                            "Ref": "ConsoleProxyLogGroup"
                        },
                        "\n",
                        "vCloudContainerDebugLogGroup=",
                        {
                            "Ref": "vCloudContainerDebugLogGroup"
                        },               
                        "\n",
                        "vCDJXMS=",
                        {
                            "Ref": "vCDUIJXMS"
                        },               
                        "\n",
                        "vCDJXMX=",
                        {
                            "Ref": "vCDUIJXMX"
                        },               
                        "\n",
                        "cfn-init -v --stack ",
                        {
                            "Ref": "AWS::StackName"
                        },
                        " --resource vCDUILaunchConfiguration --region ",
                        {
                            "Ref": "AWS::Region"
                        },
                        "\n",
                        "cfn-signal -e $? --stack ",
                        {
                            "Ref": "AWS::StackName"
                        },
                        " --resource vCDUIAutoScalingGroup --region ",
                        {
                            "Ref": "AWS::Region"
                        },
                        "\n"
                      ]
                    ]
                  }
                }
            }
        },
        "vCDConsoleLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "vCDCellsAccessRole"
                        },
                        "buckets": [ "vcd-cf-templates" ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/vcd_cells_bootstrap.sh": {
                                "source": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vcd_cells_bootstrap.sh",
                                "mode": "000550",
                                "owner": "root",
                                "group": "root",
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "b-bootstrap": {
                                "command": "./tmp/vcd_cells_bootstrap.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPairNameEC2"
                },
                "IamInstanceProfile": {
                    "Ref": "vCDCellsInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "LinuxAMINameMap",
                                {
                                    "Ref": "EC2AMIOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                          "VolumeType": "gp2",
                          "DeleteOnTermination": true,
                          "VolumeSize": {
                              "Ref": "vCDConsoleVolumeSize"
                          }
                        }
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "PrivateInstanceSecurityGroupID"
                    },
                    {
                        "Ref": "CellsAccessSecurityGroupID"
                    },
                    {
                        "Ref": "RDSAccessSecurityGroupID"
                    },
                    {
                        "Ref": "xFerAccessSecurityGroupID"
                    }
                ],
                "InstanceType": {
                    "Ref": "vCDConsoleInstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y\n",
                                "yum install -y epel-release\n",
                                "yum install nfs-utils lvm2 python-pip rpm-build postgresql automake fuse fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel git alsa-lib libICE libSM libX11 libXau libXdmcp libXext libXi libXt libXtst pciutils redhat-lsb wget -y\n",
                                "pip install --upgrade pip\n",
                                "pip install awscli --ignore-installed six\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "VPCID=",
                                {
                                    "Ref": "VPCID"
                                },
                                "\n",
                                "vCDBuildBucketName=",
                                {
                                    "Ref": "vCDBuildBucketName"
                                },
                                "\n",
                                "vCDBuildName=",
                                {
                                    "Ref": "vCDBuildName"
                                },
                                "\n",
                                "vCDKeystoreFileName=",
                                {
                                    "Ref": "vCDKeystoreFileName"
                                },
                                "\n",
                                "vCDCertKeystorePasswd=",
                                {
                                    "Ref": "vCDCertKeystorePasswd"
                                },
                                "\n",
                                "MessagesLogGroup=",
                                {
                                    "Ref": "MessagesLogGroup"
                                },
                                "\n",
                                "CellLogGroup=",
                                {
                                    "Ref": "CellLogGroup"
                                },
                                "\n",
                                "ConsoleProxyLogGroup=",
                                {
                                    "Ref": "ConsoleProxyLogGroup"
                                },
                                "\n",
                                "vCloudContainerDebugLogGroup=",
                                {
                                    "Ref": "vCloudContainerDebugLogGroup"
                                },               
                                "\n",
                                "vCDJXMS=",
                                {
                                    "Ref": "vCDConsoleJXMS"
                                },               
                                "\n",
                                "vCDJXMX=",
                                {
                                    "Ref": "vCDConsoleJXMX"
                                },               
                                "\n",
                                "cfn-init -v --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vCDConsoleLaunchConfiguration --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "cfn-signal -e $? --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vCDConsoleAutoScalingGroup --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }
    }
}
