{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a Multi-AZ vCloud Director Instence, multi-subnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Availability Zone Configuration"
                    },
                    "Parameters": [
                        "NumberOfAZs",
                        "AvailabilityZones"
                    ]
                },
                {
                    "Label": {
                        "default": "VPC Network Configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "VPCTenancy"
                    ]
                },
                {
                    "Label": {
                        "default": "Bastion Host Configuration"
                    },
                    "Parameters": [
                        "KeyPairNameBastion",
                        "RemoteAccessCIDR",
                        "BastionAMIOS",
                        "BastionInstanceType",
                        "EnableTCPForwarding",
                        "EnableX11Forwarding"
                    ]
                },
                {
                    "Label": {
                        "default": "RDS Configuration"
                    },
                    "Parameters": [
                        "RDSInstanceType",
                        "DBName",
                        "MasterUsername",
                        "MasterUserPassword",
                        "BackupRetentionPeriod",
                        "PreferredBackupWindow",
                        "PreferredMaintenanceWindow",
                        "AllocatedStorage",
                        "AutoMinorVersionUpgrade",
                        "TcpPort"
                    ]
                },
                {
                    "Label": {
                        "default": "Main vCD Cell Configuration"
                    },
                    "Parameters": [
                        "KeyPairNameEC2",
                        "EC2AMIOS",
                        "MainVcdCellType"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Binaries Details"
                    },
                    "Parameters": [
                        "vCDBuildBucketName",
                        "vCDBuildName"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Instance Configuration"
                    },
                    "Parameters": [
                        "vCDAdmin",
                        "vCDAdminFullName",
                        "vCDAdminPasswd",
                        "vCDAdminEmail",
                        "vCDSystemName",
                        "vCDInstalationId",
                        "vCDSerialNumber",
                        "VcdCertKeystorePasswd"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD ELB Certificate Configuration"
                    },
                    "Parameters": [
                        "ELBCertificateArn"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD ELB Health Check Configuration"
                    },
                    "Parameters": [
                        "ELBHealthCheckIntervalSeconds",
                        "ELBHealthCheckProtocol",
                        "ELBHealthCheckPort",
                        "ELBHealthCheckPath",
                        "ELBHealthCheckTimeoutSeconds",
                        "ELBHealthyThresholdCount",
                        "ELBUnhealthyThresholdCount",
                        "ELBResponseCode"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCTenancy": {
                    "default": "VPC Tenancy"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI Operating System"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "EnableTCPForwarding": {
                    "default": "Enable TCP Forwarding"
                },
                "EnableX11Forwarding": {
                    "default": "Enable X11 Forwarding"
                },
                "KeyPairNameBastion": {
                    "default": "Key Pair Name for Bastion Host/s"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "KeyPairNameEC2": {
                    "default": "Key Pair Name for vCD/xFer EC2 Instances"
                },
                "EC2AMIOS": {
                   "default": "vCD EC2 AMI Operating System"
               },
               "RDSInstanceType" : {
                 "default" : "RDS Instance Type"
               },
               "DBName" : {
                 "default" : "vCD Postgres database name"
               },
               "MainVcdCellType": {
                   "default": "Main vCD Cell Instance Type"
               },
               "vCDBuildBucketName" : {
                 "default" : "S3 Bucket Name"
               },
               "vCDBuildName" : {
                 "default" : "vCD Binary"
               },
               "DBEndpoint" : {
                 "default" : "RDS Endpoint"
               },
               "DBName" : {
                 "default" : "RDS database name"
               },
               "MasterUsername" : {
                 "default" : "RDS Master Username"
               },
               "MasterUserPassword" : {
                 "default" : "RDS Master User Password"
               },
               "VcdCertKeystorePasswd" : {
                 "default" : "Keystore Password"
               },
               "vCDAdmin" : {
                 "default" : "The system administrator's username"
               },
               "vCDAdminFullName" : {
                 "default" : "The system administrator's full name"
               },
               "vCDAdminPasswd" : {
                 "default" : "The system administrator password"
               },
               "vCDAdminEmail" : {
                 "default" : "The system administrator's email address."
               },
               "vCDSystemName" : {
                 "default" : "System name."
               },
               "vCDInstalationId" : {
                 "default" : "Installation ID for this instance."
               },
               "vCDSerialNumber" : {
                 "default" : "License Key."
               },
               "ELBCertificateArn": {
                   "default": "ELB Certificate"
               },
               "ELBHealthCheckIntervalSeconds": {
                   "default": "Health Check Interval Seconds"
               },
               "ELBHealthCheckProtocol": {
                   "default": "Health Check Protocol"
               },
               "ELBHealthCheckPort": {
                   "default": "Health Check Port"
               },
               "ELBHealthCheckPath": {
                   "default": "Health Check Path"
               },
               "ELBHealthCheckTimeoutSeconds": {
                   "default": "Health Check Timeout Seconds"
               },
               "ELBHealthyThresholdCount": {
                   "default": "Healthy Threshold Count"
               },
               "ELBUnhealthyThresholdCount": {
                   "default": "Unhealthy Threshold Count"
               },
               "ELBResponseCode": {
                   "default": "Response Code/s"
               }
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "NumberOfAZs": {
            "AllowedValues": [
              "1","2"
            ],
            "Default": "2",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.2.0/24",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.4.0/24",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.1.0/24",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.3.0/24",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },
        "BastionInstanceType": {
            "Description": "Bastion Amazon EC2 instance type for the bastion instances",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium"
            ]
        },
        "EnableTCPForwarding": {
            "Type": "String",
            "Description": "Enable/Disable TCP Forwarding",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "EnableX11Forwarding": {
            "Type": "String",
            "Description": "Enable/Disable X11 Forwarding",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "KeyPairNameBastion": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external SSH access to the bastions",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "KeyPairNameEC2": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "EC2AMIOS": {
           "AllowedValues": [
               "Amazon-Linux-HVM",
               "CentOS-7-HVM"
           ],
           "Default": "Amazon-Linux-HVM",
           "Description": "The Linux distribution for the AMI to be used for the EC2 instances",
           "Type": "String"
       },
       "DBName": {
         "Default": "vcddb",
         "Description" : "vCD Postgres database name",
         "Type": "String",
         "MinLength": "1",
         "MaxLength": "16",
         "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
         "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
       },
       "MasterUsername": {
         "Description": "Database administration name. First character must be a letter and can not be 'root'.",
         "Type": "String",
         "Default": "dbmaster"
       },
       "MasterUserPassword": {
         "NoEcho": "true",
         "Description": "Database administration password. Minimum of 8 alphanumeric characters (pattern of [a-zA-Z0-9]).",
         "Type": "String",
         "MinLength": "8",
         "AllowedPattern": "[a-zA-Z0-9!?]*",
         "ConstraintDescription": "Must only contain upper and lowercase letters and numbers"
       },
       "BackupRetentionPeriod": {
         "Description": "Enter Backup Retention Period in Days.",
         "Type": "Number",
         "Default": "7"
       },
       "TcpPort": {
         "Description": "Enter RDS Listening TCP Port number.",
         "Type": "Number",
         "Default": "5432"
       },
       "PreferredBackupWindow": {
         "Description": "Enter Preferred Backup Window Time (UTC).",
         "Type": "String",
         "Default": "17:00-19:00"
       },
       "PreferredMaintenanceWindow": {
         "Description": "Enter Preferred Maintenance Window Time (UTC).",
         "Type": "String",
         "Default": "Sun:19:00-Sun:23:00"
       },
       "AllocatedStorage": {
         "Default": "5",
         "Description": "Allocated Storage Storage(GB) for the Database.",
         "Type": "Number",
         "MinValue": "5",
         "MaxValue": "6144",
         "ConstraintDescription": "Must be between 5-6144"
       },
       "AutoMinorVersionUpgrade": {
         "Description": "Allow Automatic Minor Version Upgrades?",
         "Type": "String",
         "Default": "true",
         "AllowedValues": [
           "true",
           "false"
         ]
       },
       "RDSInstanceType": {
         "Description": "Select Instance Type.",
         "Type": "String",
         "Default": "db.m4.large",
         "AllowedValues": [
           "db.t2.micro",
           "db.t2.small",
           "db.m4.large",
           "db.m4.xlarge",
           "db.m4.2xlarge"
         ],
         "ConstraintDescription": "Must be a valid EC2 instance type."
       },
       "MainVcdCellType": {
           "AllowedValues": [
               "t2.small",
               "m5.large",
               "m5.xlarge"
           ],
           "Default": "m5.large",
           "Description": "Must be a valid EC2 instance type.",
           "Type": "String"
       },
       "vCDBuildBucketName": {
           "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
           "ConstraintDescription": "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
           "Default": "vcd-builds",
           "Description": "Bucket name that holds the VCD build to be used by this stack.",
           "Type": "String"
       },
       "vCDBuildName": {
           "Default": "vmware-vcloud-director-distribution-9.0.0-7554058.bin",
           "Description": "Specify the vCD binary filename name.",
           "Type": "String"
       },
       "VcdCertKeystorePasswd": {
         "NoEcho": "true",
         "Description": "vCD Certificates Keystore Password. Minimum of 8 alphanumeric characters.",
         "Type": "String",
         "MinLength": "8"
       },
       "vCDAdmin": {
         "Description": "The username of the system administrator user you are creating.",
         "Type": "String",
         "Default": "vcd_admin"
       },
       "vCDAdminFullName": {
         "Description": "The full name of the system administrator user you are creating.",
         "Type": "String",
         "Default": "vCD Administrator Name"
       },
       "vCDAdminPasswd": {
         "NoEcho": "true",
         "Description": "The password for the system administrator user you are creating.",
         "Type": "String",
         "MinLength": "8"
       },
       "vCDAdminEmail": {
         "Description": "The e-mail address for the system administrator you are creating.",
         "Type": "String",
         "Default": "vcd_admin@company.com"
       },
       "vCDSystemName": {
         "Description": "",
         "Type": "String",
         "Default": "vCD System Name"
       },
       "vCDInstalationId": {
         "Description": "The installation ID for this installation of vCloud Director.",
         "Type": "String",
         "MinLength": "1",
         "MaxLength": "2",
         "AllowedPattern" : "[1-6][0-9]*",
         "Default": "1",
         "ConstraintDescription" : "Must be an integer in the range 1-63."
       },
       "vCDSerialNumber": {
         "Description": "The serial number (license key) for this vCD Instance.",
         "Type": "String"
       },
       "ELBCertificateArn": {
           "Default": "arn:aws:acm:us-west-2:331345527506:certificate/615c31f1-87fa-4033-86f1-f381870d988d",
           "Description": "Specify the Certificate Arn to be used for the vCD Load balancer.",
           "Type": "String"
       },
       "ELBHealthCheckIntervalSeconds": {
           "Default": "10",
           "Description": "The approximate number of seconds between health checks for an individual target.",
           "Type": "String"
       },
       "ELBHealthCheckProtocol": {
           "Default": "HTTPS",
           "Description": "The protocol that the load balancer uses when performing health checks on the targets, such as HTTP or HTTPS.",
           "Type": "String"
       },
       "ELBHealthCheckPort": {
           "Default": "443",
           "Description": "The port that the load balancer uses when performing health checks on the targets.",
           "Type": "String"
       },
       "ELBHealthCheckPath": {
           "Default": "/cloud/server_status",
           "Description": "The ping path destination where Elastic Load Balancing sends health check requests.",
           "Type": "String"
       },
       "ELBHealthCheckTimeoutSeconds": {
           "Default": "5",
           "Description": "The number of seconds to wait for a response before considering that a health check has failed.",
           "Type": "String"
       },
       "ELBHealthyThresholdCount": {
           "Default": "3",
           "Description": "The number of consecutive successful health checks that are required before an unhealthy target is considered healthy.",
           "Type": "String"
       },
       "ELBUnhealthyThresholdCount": {
           "Default": "3",
           "Description": "The number of consecutive failed health checks that are required before a target is considered unhealthy.",
           "Type": "String"
       },
       "ELBResponseCode": {
           "Default": "200",
           "Description": "The HTTP codes that a healthy target uses when responding to a health check.",
           "Type": "String"
       }
    },
    "Resources": {
      "VPCStack": {
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
              "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/vpc.template",
              "Parameters": {
                  "AvailabilityZones": {
                      "Fn::Join": [
                          ",",
                          {
                              "Ref": "AvailabilityZones"
                          }
                      ]
                  },
                  "NumberOfAZs": {
                      "Ref": "NumberOfAZs"
                  },
                  "PrivateSubnet1CIDR": {
                      "Ref": "PrivateSubnet1CIDR"
                  },
                  "PrivateSubnet2CIDR": {
                      "Ref": "PrivateSubnet2CIDR"
                  },
                  "PublicSubnet1CIDR": {
                      "Ref": "PublicSubnet1CIDR"
                  },
                  "PublicSubnet2CIDR": {
                      "Ref": "PublicSubnet2CIDR"
                  },
                  "VPCCIDR": {
                      "Ref": "VPCCIDR"
                  }
              }
          }
      },
      "BastionStack": {
          "DependsOn": "VPCStack",
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
              "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/linux-bastion.template",
              "Parameters": {
                  "BastionAMIOS": {
                      "Ref": "BastionAMIOS"
                  },
                  "BastionInstanceType": {
                      "Ref": "BastionInstanceType"
                  },
                  "EnableTCPForwarding": {
                      "Ref": "EnableTCPForwarding"
                  },
                  "EnableX11Forwarding": {
                      "Ref": "EnableX11Forwarding"
                  },
                  "KeyPairName": {
                      "Ref": "KeyPairNameBastion"
                  },
                  "NumBastionHosts": {
                      "Ref": "NumberOfAZs"
                  },
                  "PublicSubnet1": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PublicSubnet1ID"
                      ]
                  },
                  "PublicSubnet2": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PublicSubnet2ID"
                      ]
                  },
                  "RemoteAccessCIDR": {
                      "Ref": "RemoteAccessCIDR"
                  },
                  "VPCID": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.VPCID"
                      ]
                  }
              }
          }
      },
      "vCDELBStack": {
          "DependsOn": "VPCStack",
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
              "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/vcd-elb.template",
              "Parameters": {
                  "VPCID": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.VPCID"
                      ]
                  },
                  "PublicSubnet1ID": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PublicSubnet1ID"
                      ]
                  },
                  "PublicSubnet2ID": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PublicSubnet2ID"
                      ]
                  },
                  "CellsAccessSecurityGroupID": {
                      "Fn::GetAtt": [
                          "vCDMainStack",
                          "Outputs.CellsAccessSecurityGroupID"
                      ]
                  },
                  "ELBCertificateArn": {
                      "Ref": "ELBCertificateArn"
                  },
                  "ELBHealthCheckIntervalSeconds": {
                      "Ref": "ELBHealthCheckIntervalSeconds"
                  },
                  "ELBHealthCheckProtocol": {
                      "Ref": "ELBHealthCheckProtocol"
                  },
                  "ELBHealthCheckPort": {
                      "Ref": "ELBHealthCheckPort"
                  },
                  "ELBHealthCheckPath" : {
                      "Ref": "ELBHealthCheckPath"
                  },
                  "ELBHealthCheckTimeoutSeconds": {
                      "Ref": "ELBHealthCheckTimeoutSeconds"
                  },
                  "ELBHealthyThresholdCount": {
                      "Ref": "ELBHealthyThresholdCount"
                  },
                  "ELBUnhealthyThresholdCount": {
                      "Ref": "ELBUnhealthyThresholdCount"
                  },
                  "ELBResponseCode" : {
                      "Ref": "ELBResponseCode"
                  }
              }
          }
      },
      "RDSStack": {
          "DependsOn": "VPCStack",
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
              "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/rds.template",
              "Parameters": {
                  "NumberOfAZs": {
                      "Ref": "NumberOfAZs"
                  },
                  "PrivateSubnet1": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PrivateSubnet1ID"
                      ]
                  },
                  "PrivateSubnet2": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PrivateSubnet2ID"
                      ]
                  },
                  "VPCID": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.VPCID"
                      ]
                  },
                  "RDSInstanceType": {
                      "Ref": "RDSInstanceType"
                  },
                  "DBName": {
                      "Ref": "DBName"
                  },
                  "MasterUsername": {
                      "Ref": "MasterUsername"
                  },
                  "MasterUserPassword": {
                      "Ref": "MasterUserPassword"
                  },
                  "BackupRetentionPeriod": {
                      "Ref": "BackupRetentionPeriod"
                  },
                  "PreferredBackupWindow": {
                      "Ref": "PreferredBackupWindow"
                  },
                  "PreferredMaintenanceWindow": {
                      "Ref": "PreferredMaintenanceWindow"
                  },
                  "AllocatedStorage": {
                      "Ref": "AllocatedStorage"
                  },
                  "AutoMinorVersionUpgrade": {
                      "Ref": "AutoMinorVersionUpgrade"
                  },
                  "TcpPort": {
                      "Ref": "TcpPort"
                  }
              }
          }
      },
      "vCDMainStack": {
          "DependsOn": "RDSStack",
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
              "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/vcd-main.template",
              "Parameters": {
                  "VPCID": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.VPCID"
                      ]
                  },
                  "PrivateSubnet1": {
                      "Fn::GetAtt": [
                          "VPCStack",
                          "Outputs.PrivateSubnet1ID"
                      ]
                  },
                  "EC2AMIOS": {
                      "Ref": "EC2AMIOS"
                  },
                  "MainVcdCellType": {
                      "Ref": "MainVcdCellType"
                  },
                  "KeyPairNameEC2": {
                      "Ref": "KeyPairNameEC2"
                  },
                  "PrivateInstanceSecurityGroupID": {
                      "Fn::GetAtt": [
                          "BastionStack",
                          "Outputs.PrivateInstanceSecurityGroupID"
                      ]
                  },
                  "RDSAccessSecurityGroupID": {
                      "Fn::GetAtt": [
                          "RDSStack",
                          "Outputs.RDSAccessSecurityGroupID"
                      ]
                  },
                  "DBEndpoint": {
                      "Fn::GetAtt": [
                          "RDSStack",
                          "Outputs.RDSEndpoint"
                      ]
                  },
                  "DBName": {
                      "Ref": "DBName"
                  },
                  "DBMasterUsername": {
                      "Ref": "MasterUsername"
                  },
                  "DBMasterUserPassword": {
                      "Ref": "MasterUserPassword"
                  },
                  "vCDBuildBucketName": {
                      "Ref": "vCDBuildBucketName"
                  },
                  "vCDBuildName": {
                      "Ref": "vCDBuildName"
                  },
                  "VcdCertKeystorePasswd": {
                      "Ref": "VcdCertKeystorePasswd"
                  },
                  "vCDAdmin": {
                      "Ref": "vCDAdmin"
                  },
                  "vCDAdminFullName": {
                      "Ref": "vCDAdminFullName"
                  },
                  "vCDAdminPasswd": {
                      "Ref": "vCDAdminPasswd"
                  },
                  "vCDAdminEmail": {
                      "Ref": "vCDAdminEmail"
                  },
                  "vCDSystemName": {
                      "Ref": "vCDSystemName"
                  },
                  "vCDInstalationId": {
                      "Ref": "vCDInstalationId"
                  },
                  "vCDSerialNumber": {
                      "Ref": "vCDSerialNumber"
                  }
              }
          }
      }
    }
}
