{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a Multi-AZ vCloud Director Instence, multi-subnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Availability Zone Configuration"
                    },
                    "Parameters": [
                        "NumberOfAZs",
                        "AvailabilityZones"
                    ]
                },
                {
                    "Label": {
                        "default": "VPC Network Configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "VPCTenancy"
                    ]
                },
                {
                    "Label": {
                        "default": "Bastion Host Configuration"
                    },
                    "Parameters": [
                        "KeyPairNameBastion",
                        "RemoteAccessCIDR",
                        "BastionAMIOS",
                        "BastionInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "RDS Configuration"
                    },
                    "Parameters": [
                        "RDSInstanceType",
                        "DBName",
                        "MasterUsername",
                        "MasterUserPassword",
                        "BackupRetentionPeriod",
                        "PreferredBackupWindow",
                        "PreferredMaintenanceWindow",
                        "AllocatedStorage",
                        "AutoMinorVersionUpgrade",
                        "TcpPort"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Binaries Details"
                    },
                    "Parameters": [
                        "vCDBuildBucketName",
                        "vCDBuildName"
                    ]
                },
                {
                    "Label": {
                        "default": "Global vCD/xFer Configuration"
                    },
                    "Parameters": [
                        "KeyPairNameEC2",
                        "EC2AMIOS",
                        "LogRetentionDays"
                    ]
                },
                {
                    "Label": {
                        "default": "xFer EC2 Configuration"
                    },
                    "Parameters": [
                        "xFerInstanceType",
                        "xFerVolumeType",
                        "xFerIOPS",
                        "xFerVolumeSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Main vCD Cell Configuration"
                    },
                    "Parameters": [
                        "MainVcdInstanceType",
                        "MainVcdVolumeSize"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD UI Cells Configuration"
                    },
                    "Parameters": [
                        "vCDUIInstanceType",
                        "vCDUIVolumeSize",
                        "NumVCDUICells",
                        "vCDUIJXMS",
                        "vCDUIJXMX"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Console Cells Configuration"
                    },
                    "Parameters": [
                        "vCDConsoleInstanceType",
                        "vCDConsoleVolumeSize",
                        "NumVCDConsoleCells",
                        "vCDConsoleJXMS",
                        "vCDConsoleJXMX"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Instance Configuration"
                    },
                    "Parameters": [
                        "vCDAdmin",
                        "vCDAdminFullName",
                        "vCDAdminPasswd",
                        "vCDAdminEmail",
                        "vCDSystemName",
                        "vCDInstalationId",
                        "vCDSerialNumber",
                        "vCDKeystoreFileName",
                        "vCDCertKeystorePasswd"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD UI Aplication Loadbalancer Configuration"
                    },
                    "Parameters": [
                        "ELBUICertificateArn",
                        "ELBUIHealthCheckIntervalSeconds",
                        "ELBUIHealthCheckPath",
                        "ELBUIHealthCheckTimeoutSeconds",
                        "ELBUIHealthyThresholdCount",
                        "ELBUIUnhealthyThresholdCount",
                        "ELBUIResponseCode"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Console Network Loadbalancer Configuration"
                    },
                    "Parameters": [
                        "ELBConsoleHealthCheckIntervalSeconds",
                        "ELBConsoleHealthyThresholdCount"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCTenancy": {
                    "default": "VPC Tenancy"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI Operating System"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "KeyPairNameBastion": {
                    "default": "Key Pair Name for Bastion Host/s"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "KeyPairNameEC2": {
                    "default": "Key Pair Name for all vCD Cells"
                },
                "EC2AMIOS": {
                    "default": "vCD EC2 AMI Operating System"
                },
                "RDSInstanceType" : {
                    "default" : "RDS Instance Type"
                },
                "xFerInstanceType": {
                    "default": "xFer EC2 Instance Type"
                },
                "xFerVolumeType": {
                    "default": "Transfer Store Volume Type"
                },
                "xFerIOPS": {
                    "default": "Transfer Store Volume Provisioned IOPS"
                },
                "xFerVolumeSize": {
                    "default": "Transfer Store Volume Size"
                },
                "MainVcdInstanceType": {
                    "default": "Main vCD Cell Instance Type"
                },
                "vCDBuildBucketName" : {
                    "default" : "S3 Bucket Name"
                },
                "vCDBuildName" : {
                    "default" : "vCD Binary"
                },
                "vCDKeystoreFileName" : {
                    "default" : "vCD Java Certificate Keystore filename"
                },
                "DBEndpoint" : {
                    "default" : "RDS Endpoint"
                },
                "DBName" : {
                    "default" : "vCD Postgres database name"
                },
                "MasterUsername" : {
                    "default" : "RDS Master Username"
                },
                "MasterUserPassword" : {
                    "default" : "RDS Master User Password"
                },
                "vCDCertKeystorePasswd" : {
                    "default" : "Keystore Password"
                },
                "vCDAdmin" : {
                    "default" : "The system administrator's username"
                },
                "vCDAdminFullName" : {
                    "default" : "The system administrator's full name"
                },
                "vCDAdminPasswd" : {
                    "default" : "The system administrator password"
                },
                "vCDAdminEmail" : {
                    "default" : "The system administrator's email address."
                },
                "vCDSystemName" : {
                    "default" : "System name."
                },
                "vCDInstalationId" : {
                    "default" : "Installation ID for this instance."
                },
                "vCDSerialNumber" : {
                    "default" : "License Key."
                },
                "vCDUIInstanceType": {
                    "default": "vCD UI Cells Instance Type"
                },
                "vCDConsoleInstanceType": {
                    "default": "vCD Console Cells Instance Type"
                },
                "NumVCDUICells": {
                    "default": "Number of vCD UI Cells"
                },
                "NumVCDConsoleCells": {
                    "default": "Number of vCD Console Cells"
                },
                "ELBUICertificateArn": {
                    "default": "vCD UI ALB Certificate"
                },
                "ELBUIHealthCheckIntervalSeconds": {
                    "default": "vCD UI ALB Health Check Interval Seconds"
                },
                "ELBUIHealthCheckPath": {
                    "default": "vCD UI ALB Health Check Path"
                },
                "ELBUIHealthCheckTimeoutSeconds": {
                    "default": "vCD UI ALB Health Check Timeout Seconds"
                },
                "ELBUIHealthyThresholdCount": {
                    "default": "vCD UI ALB Healthy Threshold Count"
                },
                "ELBUIUnhealthyThresholdCount": {
                    "default": "vCD UI ALB Unhealthy Threshold Count"
                },
                "ELBUIResponseCode": {
                    "default": "vCD UI ALB Response Code/s"
                },
                "ELBConsoleHealthCheckIntervalSeconds": {
                    "default": "vCD Console NLB Health Check Interval Seconds"
                },
                "ELBConsoleHealthyThresholdCount": {
                    "default": "vCD Console NLB Healthy Threshold Count"
                },
                "MainVcdVolumeSize": {
                    "default": "Main vCD root volume size"
                },
                "vCDUIVolumeSize": {
                    "default": "vCD UI Cells root volume size"
                },
                "vCDConsoleVolumeSize": {
                    "default": "vCD Console Cells root volume size"
                },
                "LogRetentionDays": {
                        "default": "CloudWatch Log Retention"
                },
                "vCDUIJXMS": {
                    "default" : "Initial vCD Java Heap Size"
                },
                "vCDUIJXMX": {
                    "default" : "Maximum vCD Java Heap Size" 
                },
                "vCDConsoleJXMS": {
                    "default" : "Initial vCD Java Heap Size" 
                },
                "vCDConsoleJXMX": {
                    "default" : "Maximum vCD Java Heap Size"
                }
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "NumberOfAZs": {
            "AllowedValues": [
              "1","2"
            ],
            "Default": "2",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.2.0/24",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.4.0/24",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.1.0/24",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.3.0/24",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "172.16.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM"
            ],
            "Default": "CentOS-7-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },
        "BastionInstanceType": {
            "Description": "Bastion Amazon EC2 instance type for the bastion instances",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium"
            ]
        },
        "KeyPairNameBastion": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external SSH access to the bastions",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "KeyPairNameEC2": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "EC2AMIOS": {
           "AllowedValues": [
               "Amazon-Linux-2-HVM",
               "CentOS-7-HVM"
           ],
           "Default": "CentOS-7-HVM",
           "Description": "The Linux distribution for the AMI to be used for the EC2 instances",
           "Type": "String"
        },
        "DBName": {
            "Default": "vcddb",
            "Description" : "vCD Postgres database name",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
        },
        "MasterUsername": {
            "Description": "Database administration name. First character must be a letter and can not be 'root'.",
            "Type": "String",
            "Default": "dbmaster"
        },
        "MasterUserPassword": {
            "NoEcho": "true",
            "Description": "Database administration password. Minimum of 8 alphanumeric characters (pattern of [a-zA-Z0-9]).",
            "Type": "String",
            "MinLength": "8",
            "AllowedPattern": "[a-zA-Z0-9!?]*",
            "ConstraintDescription": "Must only contain upper and lowercase letters and numbers"
        },
        "BackupRetentionPeriod": {
            "Description": "Enter Backup Retention Period in Days.",
            "Type": "Number",
            "Default": "7"
        },
        "TcpPort": {
            "Description": "Enter RDS Listening TCP Port number.",
            "Type": "Number",
            "Default": "5432"
        },
        "PreferredBackupWindow": {
            "Description": "Enter Preferred Backup Window Time (UTC).",
            "Type": "String",
            "Default": "17:00-19:00"
        },
        "PreferredMaintenanceWindow": {
            "Description": "Enter Preferred Maintenance Window Time (UTC).",
            "Type": "String",
            "Default": "Sun:19:00-Sun:23:00"
        },
        "AllocatedStorage": {
            "Default": "5",
            "Description": "Allocated Storage Storage(GB) for the Database.",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "6144",
            "ConstraintDescription": "Must be between 5-6144"
        },
        "AutoMinorVersionUpgrade": {
            "Description": "Allow Automatic Minor Version Upgrades?",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
            "true",
            "false"
            ]
        },
        "RDSInstanceType": {
            "Description": "Select Instance Type.",
            "Type": "String",
            "Default": "db.m4.large",
            "AllowedValues": [
            "db.t2.micro",
            "db.t2.small",
            "db.m4.large",
            "db.m4.xlarge",
            "db.m4.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "xFerInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.medium",
                "t2.large"
            ],
            "Default": "t2.medium",
            "Description": "Amazon EC2 instances type",
            "Type": "String"
        },
        "xFerVolumeType": {
            "AllowedValues": [
                "gp2",
                "io1"
            ],
            "Default": "gp2",
            "Description": "Type of EBS Volumes for xFer Server",
            "Type": "String"
        },
        "xFerIOPS": {
            "Default": "3000",
            "Description": "Only Applicable when Volume Type is io1",
            "Type": "Number"
        },
        "xFerVolumeSize": {
            "Default": "1000",
            "Description": "Transfer Volume Size GB",
            "Type": "Number"
        },
        "MainVcdInstanceType": {
            "AllowedValues": [
                "t2.small",
                "m5.large",
                "m5.xlarge"
            ],
            "Default": "t2.small",
            "Description": "Amazon EC2 instance type.",
            "Type": "String"
        },
        "vCDBuildBucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "vcd-builds",
            "Description": "Bucket name that holds the VCD build to be used by this stack.",
            "Type": "String"
        },
        "vCDBuildName": {
            "Default": "vmware-vcloud-director-distribution-9.1.0-7905839.bin",
            "Description": "Specify the vCD binary filename name.",
            "Type": "String"
        },
        "vCDKeystoreFileName": {
            "Default": "certificates.ks",
            "Description": "Specify the vCD Java certifikate keystore filename name stored in the same S3 bucket as the vCD build.",
            "Type": "String"
        },
        "vCDCertKeystorePasswd": {
            "NoEcho": "true",
            "Description": "vCD Certificates Keystore Password. Minimum of 8 alphanumeric characters.",
            "Type": "String",
            "MinLength": "8"
        },
        "vCDAdmin": {
            "Description": "The username of the system administrator user you are creating.",
            "Type": "String",
            "Default": "vcd_admin"
        },
        "vCDAdminFullName": {
            "Description": "The full name of the system administrator user you are creating. No spaces currently Allowed!!!",
            "Type": "String",
            "Default": "vCD_Administrator_Name"
        },
        "vCDAdminPasswd": {
            "NoEcho": "true",
            "Description": "The password for the system administrator user you are creating.",
            "Type": "String",
            "MinLength": "8"
        },
        "vCDAdminEmail": {
            "Description": "The e-mail address for the system administrator you are creating.",
            "Type": "String",
            "Default": "vcd_admin@company.com"
        },
        "vCDSystemName": {
            "Description": "vCD System Name. No spaces currently Allowed!!!",
            "Type": "String",
            "Default": "vCD_System_Name"
        },
        "vCDInstalationId": {
            "Description": "The installation ID for this installation of vCloud Director.",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "2",
            "AllowedPattern" : "[1-9][0-9]*",
            "Default": "1",
            "ConstraintDescription" : "Must be an integer in the range 1-63."
        },
        "vCDSerialNumber": {
            "Description": "The serial number (license key) for this vCD Instance.",
            "Type": "String"
        },
        "vCDUIInstanceType": {
            "AllowedValues": [
                "t2.small",
                "m5.large",
                "m5.xlarge"
            ],
            "Default": "m5.xlarge",
            "Description": "Amazon EC2 instances type",
            "Type": "String"
        },
        "vCDConsoleInstanceType": {
            "AllowedValues": [
                "t2.small",
                "m5.large",
                "m5.xlarge"
            ],
            "Default": "m5.large",
            "Description": "Amazon EC2 instances type",
            "Type": "String"
        },
        "NumVCDUICells": {
            "AllowedValues": [
                "1",
                "2",
                "4"
            ],
            "Default": "2",
            "Description": "Enter the number of vCD UI Cells to create.",
            "Type": "String"
        },
        "NumVCDConsoleCells": {
            "AllowedValues": [
                "1",
                "2",
                "4"
            ],
            "Default": "2",
            "Description": "Enter the number of vCD Console Cells to create.",
            "Type": "String"
        },
        "ELBUICertificateArn": {
            "Description": "Specify the Certificate Arn in ACM, which will be used for the vCD Load balancer.",
            "Type": "String"
        },
        "ELBUIHealthCheckIntervalSeconds": {
            "Default": "30",
            "Description": "The approximate number of seconds between health checks for an individual target.",
            "Type": "String"
        },
        "ELBUIHealthCheckPath": {
            "Default": "/cloud/server_status",
            "Description": "The ping path destination where Elastic Load Balancing sends health check requests.",
            "Type": "String"
        },
        "ELBUIHealthCheckTimeoutSeconds": {
            "Default": "10",
            "Description": "The number of seconds to wait for a response before considering that a health check has failed.",
            "Type": "String"
        },
        "ELBUIHealthyThresholdCount": {
            "Default": "3",
            "Description": "The number of consecutive successful health checks that are required before an unhealthy target is considered healthy.",
            "Type": "String"
        },
        "ELBUIUnhealthyThresholdCount": {
            "Default": "3",
            "Description": "The number of consecutive failed health checks that are required before a target is considered unhealthy.",
            "Type": "String"
        },
        "ELBUIResponseCode": {
            "Default": "200",
            "Description": "The HTTP codes that a healthy target uses when responding to a health check.",
            "Type": "String"
        },
        "ELBConsoleHealthCheckIntervalSeconds": {
            "Default": "30",
            "AllowedValues" : ["10", "30"],
            "Description": "The approximate number of seconds between health checks for an individual target. Allowed Values are 10 or 30 seconds!",
            "Type": "String"
        },
        "ELBConsoleHealthyThresholdCount": {
            "Default": "3",
            "Description": "The number of consecutive successful health checks that are required before an unhealthy target is considered healthy.",
            "Type": "String"
        },
        "vCDUIVolumeSize": {
            "Default": "16",
            "Description": "Amazon EC2 Instance Root Volume Size GB",
            "Type": "String"
        },
        "vCDConsoleVolumeSize": {
            "Default": "16",
            "Description": "Amazon EC2 Instance Root Volume Size GB",
            "Type": "String"
        },
        "MainVcdVolumeSize": {
            "Default": "16",
            "Description": "Amazon EC2 Instance Root Volume Size GB",
            "Type": "String"
        },
        "LogRetentionDays": {
            "Description": "CloudWatch Logs Retention in Days",
            "Default": "7",
            "Type": "Number" 
        },
        "vCDUIJXMS": {
            "Description": "vCD Java Heap Size initial memory allocation pool. Enter value in MB!",
            "Default": "1024",
            "Type": "Number" 
        },
        "vCDUIJXMX": {
            "Description": "vCD Java Heap Size maximum memory allocation pool. Enter value in MB!",
            "Default": "4096",
            "Type": "Number" 
        },
        "vCDConsoleJXMS": {
            "Description": "vCD Java Heap Size initial memory allocation pool. Enter value in MB!",
            "Default": "1024",
            "Type": "Number" 
        },
        "vCDConsoleJXMX": {
            "Description": "vCD Java Heap Size maximum memory allocation pool. Enter value in MB!",
            "Default": "4096",
            "Type": "Number" 
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vpc.template",
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "PrivateSubnet1CIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2CIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/linux-bastion.template",
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairNameBastion"
                    },
                    "NumBastionHosts": {
                        "Ref": "NumberOfAZs"
                    },
                    "PublicSubnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "LogRetentionDays": {
                        "Ref": "LogRetentionDays"
                    }
                }
            }
        },
        "RDSStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/rds.template",
                "Parameters": {
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "PrivateSubnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1ID"
                        ]
                    },
                    "PrivateSubnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2ID"
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "RDSInstanceType": {
                        "Ref": "RDSInstanceType"
                    },
                    "DBName": {
                        "Ref": "DBName"
                    },
                    "MasterUsername": {
                        "Ref": "MasterUsername"
                    },
                    "MasterUserPassword": {
                        "Ref": "MasterUserPassword"
                    },
                    "BackupRetentionPeriod": {
                        "Ref": "BackupRetentionPeriod"
                    },
                    "PreferredBackupWindow": {
                        "Ref": "PreferredBackupWindow"
                    },
                    "PreferredMaintenanceWindow": {
                        "Ref": "PreferredMaintenanceWindow"
                    },
                    "AllocatedStorage": {
                        "Ref": "AllocatedStorage"
                    },
                    "AutoMinorVersionUpgrade": {
                        "Ref": "AutoMinorVersionUpgrade"
                    },
                    "TcpPort": {
                        "Ref": "TcpPort"
                    }
                }
            }
        },
        "xFerStack": {
            "DependsOn": "BastionStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/xfer.template",
                "Parameters": {
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1ID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2ID"
                        ]
                    },
                    "PrivateSubnet1CIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2CIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "KeyPairNameEC2": {
                        "Ref": "KeyPairNameEC2"
                    },
                    "EC2AMIOS": {
                        "Ref": "EC2AMIOS"
                    },
                    "xFerInstanceType": {
                        "Ref": "xFerInstanceType"
                    },
                    "xFerVolumeType": {
                        "Ref": "xFerVolumeType"
                    },
                    "xFerIOPS": {
                        "Ref": "xFerIOPS"
                    },
                    "xFerVolumeSize": {
                        "Ref": "xFerVolumeSize"
                    },
                    "PrivateInstanceSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.PrivateInstanceSecurityGroupID"
                        ]
                    },
                    "LogRetentionDays": {
                        "Ref": "LogRetentionDays"
                    }
                }
            }
        },
        "vCDMainStack": {
            "DependsOn": [
                "RDSStack",
                "xFerStack"
            ],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vcd-main.template",
                "Parameters": {
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1ID"
                        ]
                    },
                    "EC2AMIOS": {
                        "Ref": "EC2AMIOS"
                    },
                    "MainVcdInstanceType": {
                        "Ref": "MainVcdInstanceType"
                    },
                    "KeyPairNameEC2": {
                        "Ref": "KeyPairNameEC2"
                    },
                    "PrivateInstanceSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.PrivateInstanceSecurityGroupID"
                        ]
                    },
                    "RDSAccessSecurityGroupID": {
                        "Fn::GetAtt": [
                            "RDSStack",
                            "Outputs.RDSAccessSecurityGroupID"
                        ]
                    },
                    "xFerAccessSecurityGroupID": {
                        "Fn::GetAtt": [
                            "xFerStack",
                            "Outputs.xFerAccessSecurityGroupID"
                        ]
                    },
                    "efsID": {
                        "Fn::GetAtt": [
                            "xFerStack",
                            "Outputs.EFSID"
                        ]
                    },
                    "DBEndpoint": {
                        "Fn::GetAtt": [
                            "RDSStack",
                            "Outputs.RDSEndpoint"
                        ]
                    },
                    "DBName": {
                        "Ref": "DBName"
                    },
                    "DBMasterUsername": {
                        "Ref": "MasterUsername"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "MasterUserPassword"
                    },
                    "vCDBuildBucketName": {
                        "Ref": "vCDBuildBucketName"
                    },
                    "vCDBuildName": {
                        "Ref": "vCDBuildName"
                    },
                    "vCDKeystoreFileName": {
                        "Ref": "vCDKeystoreFileName"
                    },
                    "vCDCertKeystorePasswd": {
                        "Ref": "vCDCertKeystorePasswd"
                    },
                    "vCDAdmin": {
                        "Ref": "vCDAdmin"
                    },
                    "vCDAdminFullName": {
                        "Ref": "vCDAdminFullName"
                    },
                    "vCDAdminPasswd": {
                        "Ref": "vCDAdminPasswd"
                    },
                    "vCDAdminEmail": {
                        "Ref": "vCDAdminEmail"
                    },
                    "vCDSystemName": {
                        "Ref": "vCDSystemName"
                    },
                    "vCDInstalationId": {
                        "Ref": "vCDInstalationId"
                    },
                    "vCDSerialNumber": {
                        "Ref": "vCDSerialNumber"
                    },
                    "MainVcdVolumeSize": {
                        "Ref": "MainVcdVolumeSize"
                    },
                    "LogRetentionDays": {
                      "Ref": "LogRetentionDays"
                    }
                }
            }
        },
        "vCDELBStack": {
            "DependsOn": "vCDMainStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vcd-elb.template",
                "Parameters": {
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "CellsAccessSecurityGroupID": {
                        "Fn::GetAtt": [
                            "vCDMainStack",
                            "Outputs.CellsAccessSecurityGroupID"
                        ]
                    },
                    "ELBUICertificateArn": {
                        "Ref": "ELBUICertificateArn"
                    },
                    "ELBUIHealthCheckIntervalSeconds": {
                        "Ref": "ELBUIHealthCheckIntervalSeconds"
                    },
                    "ELBUIHealthCheckPath": {
                        "Ref": "ELBUIHealthCheckPath"
                    },
                    "ELBUIHealthCheckTimeoutSeconds": {
                        "Ref": "ELBUIHealthCheckTimeoutSeconds"
                    },
                    "ELBUIHealthyThresholdCount" : {
                        "Ref": "ELBUIHealthyThresholdCount"
                    },
                    "ELBUIUnhealthyThresholdCount": {
                        "Ref": "ELBUIUnhealthyThresholdCount"
                    },
                    "ELBUIResponseCode": {
                        "Ref": "ELBUIResponseCode"
                    },
                    "ELBConsoleHealthCheckIntervalSeconds": {
                        "Ref": "ELBConsoleHealthCheckIntervalSeconds"
                    },
                    "ELBConsoleHealthyThresholdCount" : {
                        "Ref": "ELBConsoleHealthyThresholdCount"
                    }
                }
            }
        },
        "vCDCellsStack": {
            "DependsOn": [
                "vCDMainStack",
                "vCDELBStack"
            ],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vcd-cells.template",
                "Parameters": {
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1ID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2ID"
                        ]
                    },
                    "EC2AMIOS": {
                        "Ref": "EC2AMIOS"
                    },
                    "vCDUIInstanceType": {
                        "Ref": "vCDUIInstanceType"
                    },
                    "vCDConsoleInstanceType": {
                        "Ref": "vCDConsoleInstanceType"
                    },
                    "KeyPairNameEC2": {
                        "Ref": "KeyPairNameEC2"
                    },
                    "PrivateInstanceSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.PrivateInstanceSecurityGroupID"
                        ]
                    },
                    "RDSAccessSecurityGroupID": {
                        "Fn::GetAtt": [
                            "RDSStack",
                            "Outputs.RDSAccessSecurityGroupID"
                        ]
                    },
                    "CellsAccessSecurityGroupID": {
                        "Fn::GetAtt": [
                            "vCDMainStack",
                            "Outputs.CellsAccessSecurityGroupID"
                        ]
                    },
                    "xFerAccessSecurityGroupID": {
                        "Fn::GetAtt": [
                            "xFerStack",
                            "Outputs.xFerAccessSecurityGroupID"
                        ]
                    },
                    "efsID": {
                        "Fn::GetAtt": [
                            "xFerStack",
                            "Outputs.EFSID"
                        ]
                    },
                    "vCDBuildBucketName": {
                        "Ref": "vCDBuildBucketName"
                    },
                    "vCDBuildName": {
                        "Ref": "vCDBuildName"
                    },
                    "vCDCertKeystorePasswd": {
                        "Ref": "vCDCertKeystorePasswd"
                    },
                    "NumVCDUICells": {
                        "Ref": "NumVCDUICells"
                    },
                    "NumVCDConsoleCells": {
                        "Ref": "NumVCDConsoleCells"
                    },
                    "vCDUITargetGroup": {
                        "Fn::GetAtt": [
                            "vCDELBStack",
                            "Outputs.vCDUITargetGroup"
                        ]
                    },
                    "vCDConsoleTargetGroup": {
                        "Fn::GetAtt": [
                            "vCDELBStack",
                            "Outputs.vCDConsoleTargetGroup"
                        ]
                    },
                    "vCDConsoleVolumeSize": {
                        "Ref": "vCDConsoleVolumeSize"
                    },
                    "vCDUIVolumeSize": {
                        "Ref": "vCDUIVolumeSize"
                    },
                    "LogRetentionDays": {
                        "Ref": "LogRetentionDays"
                    },
                    "MessagesLogGroup": {
                        "Fn::GetAtt": [
                            "vCDMainStack",
                            "Outputs.MessagesLogGroup"
                        ]
                    },
                    "CellLogGroup": {
                        "Fn::GetAtt": [
                            "vCDMainStack",
                            "Outputs.CellLogGroup"
                        ]
                    },
                    "ConsoleProxyLogGroup": {
                        "Fn::GetAtt": [
                            "vCDMainStack",
                            "Outputs.ConsoleProxyLogGroup"
                        ]
                    },
                    "vCloudContainerDebugLogGroup": {
                        "Fn::GetAtt": [
                            "vCDMainStack",
                            "Outputs.vCloudContainerDebugLogGroup"
                        ]
                    }
                }
            }
        }
    }
}
