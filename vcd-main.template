{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PrivateSubnet1ID"
                    ]
                },
                {
                    "Label": {
                        "default": "Main vCD Cell Configuration"
                    },
                    "Parameters": [
                        "KeyPairNameEC2",
                        "EC2AMIOS",
                        "MainVcdInstanceType",
                        "MainVcdVolumeSize",
                        "PrivateInstanceSecurityGroupID",
                        "RDSAccessSecurityGroupID",
                        "xFerAccessSecurityGroupID",
                        "LogRetentionDays"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Binaries Details"
                    },
                    "Parameters": [
                        "vCDBuildBucketName",
                        "vCDBuildName"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Instance DB Configuration"
                    },
                    "Parameters": [
                        "DBEndpoint",
                        "DBName",
                        "DBMasterUsername",
                        "DBMasterUserPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "vCD Instance Configuration"
                    },
                    "Parameters": [
                        "vCDAdmin",
                        "vCDAdminFullName",
                        "vCDAdminPasswd",
                        "vCDAdminEmail",
                        "vCDSystemName",
                        "vCDInstalationId",
                        "vCDSerialNumber",
                        "vCDKeystoreFileName",
                        "vCDCertKeystorePasswd"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyPairNameEC2": {
                    "default": "Key Pair Name for all vCD Cells"
                },
                "EC2AMIOS": {
                    "default": "vCD EC2 AMI Operating System"
                },
                "MainVcdInstanceType": {
                    "default": "vCD EC2 Instance Type"
                },
                "vCDUIVolumeSize": {
                    "default": "vCD UI Cells root volume size"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet 1"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "PrivateInstanceSecurityGroupID": {
                    "default": "Security Group to Allow SSH Access from Bastion hosts"
                },
                "RDSAccessSecurityGroupID": {
                    "default": "Security Group to Allow Access the vCD Postgres Database"
                },
                "xFerAccessSecurityGroupID": {
                    "default": "Security Group to Allow Access the vCD Transfer Server"
                },
                "vCDBuildBucketName" : {
                    "default" : "S3 Bucket Name"
                },
                "vCDBuildName" : {
                    "default" : "vCD Binary"
                },
                "vCDKeystoreFileName" : {
                    "default" : "vCD Java Certificate Keystore filename"
                },
                "DBEndpoint" : {
                    "default" : "RDS Endpoint"
                },
                "DBName" : {
                    "default" : "RDS database name"
                },
                "DBMasterUsername" : {
                    "default" : "RDS Master Username"
                },
                "DBMasterUserPassword" : {
                    "default" : "RDS Master User Password"
                },
                "vCDCertKeystorePasswd" : {
                    "default" : "Keystore Password"
                },
                "vCDAdmin" : {
                    "default" : "The system administrator's username"
                },
                "vCDAdminFullName" : {
                    "default" : "The system administrator's full name"
                },
                "vCDAdminPasswd" : {
                    "default" : "The system administrator password"
                },
                "vCDAdminEmail" : {
                    "default" : "The system administrator's email address."
                },
                "vCDSystemName" : {
                    "default" : "System name."
                },
                "vCDInstalationId" : {
                    "default" : "Installation ID for this instance."
                },
                "vCDSerialNumber" : {
                    "default" : "License Key."
                },
                "LogRetentionDays": {
                    "default": "CloudWatch Log Retention"
                }  
            }
        }
    },
    "Parameters": {
        "KeyPairNameEC2": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "EC2AMIOS": {
            "AllowedValues": [
                "Amazon-Linux-2-HVM",
                "CentOS-7-HVM"
            ],
            "Default": "CentOS-7-HVM",
            "Description": "The Linux distribution for the AMI to be used for the EC2 instances",
            "Type": "String"
        },
        "MainVcdInstanceType": {
            "AllowedValues": [
                "t2.small",
                "m5.large"
            ],
            "Default": "t2.small",
            "Description": "Amazon EC2 instances type",
            "Type": "String"
        },
        "MainVcdVolumeSize": {
            "Default": "16",
            "Description": "Amazon EC2 Instance Root Volume Size GB",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the public subnet 1 that you want to provision the EC2 insteaces in the first AZ (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "PrivateInstanceSecurityGroupID": {
            "Description": "Security Group to Allow SSH Access from Bastion hosts",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "RDSAccessSecurityGroupID": {
            "Description": "Security Group to Allow Access RDS Database",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "xFerAccessSecurityGroupID": {
            "Description": "Select the Security Group that allows access to VCD Transfer Server.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "vCDBuildBucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "vcd-builds",
            "Description": "Bucket name that holds the VCD build and Java Certificate keystore to be used by this stack.",
            "Type": "String"
        },
        "vCDBuildName": {
            "Default": "vmware-vcloud-director-distribution-9.1.0-7905839.bin",
            "Description": "Specify the vCD binary filename name.",
            "Type": "String"
        },
        "vCDKeystoreFileName": {
            "Default": "certificates.ks",
            "Description": "Specify the vCD Java certifikate keystore filename name. The template assumes the response files is stored in the same S3 bucket as the vCD binary.",
            "Type": "String"
        },
        "DBEndpoint": {
            "Description": "vCD Postgres DB Endpoint Address.",
            "Type": "String"
        },
        "DBName": {
            "Default": "vcddb",
            "Description" : "vCD Postgres database name",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16"
        },
        "DBMasterUsername": {
            "Description": "Database administration name. First character must be a letter and can not be 'root'.",
            "Type": "String",
            "Default": "dbmaster"
        },
        "DBMasterUserPassword": {
            "NoEcho": "true",
            "Description": "Database administration password. Minimum of 8 alphanumeric characters.",
            "Type": "String",
            "MinLength": "8"
        },
        "vCDCertKeystorePasswd": {
            "NoEcho": "true",
            "Description": "vCD Certificates Keystore Password. Minimum of 8 alphanumeric characters.",
            "Type": "String",
            "MinLength": "8"
        },
        "vCDAdmin": {
            "Description": "The username of the system administrator user you are creating.",
            "Type": "String",
            "Default": "vcd_admin"
        },
        "vCDAdminFullName": {
            "Description": "The full name of the system administrator user you are creating. No spaces currently Allowed!!!",
            "Type": "String",
            "Default": "vCD_Administrator_Name"
        },
        "vCDAdminPasswd": {
            "NoEcho": "true",
            "Description": "The password for the system administrator user you are creating.",
            "Type": "String",
            "MinLength": "8"
        },
        "vCDAdminEmail": {
            "Description": "The e-mail address for the system administrator you are creating.",
            "Type": "String",
            "Default": "vcd_admin@company.com"
        },
        "vCDSystemName": {
            "Description": "vCD System Name. No spaces currently Allowed!!!",
            "Type": "String",
            "Default": "vCD_System_Name"
        },
        "vCDInstalationId": {
            "Description": "The installation ID for this installation of vCloud Director.",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "2",
            "AllowedPattern" : "[1-6][0-9]*",
            "Default": "1",
            "ConstraintDescription" : "Must be an integer in the range 1-63."
        },
        "vCDSerialNumber": {
            "Description": "The serial number (license key) for this vCD Instance.",
            "Type": "String"
        },
        "LogRetentionDays": {
            "Description": "CloudWatch Logs Retention in Days",
            "Default": "7",
            "Type": "Number" 
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUX2HVM": "mzn2-ami-hvm-2017.12.0.20180328.1-x86_64-gp2",
                "CENTOS7HVM": "CentOS Linux 7 x86_64 HVM EBS ENA 1805_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-77ec9308.4"
            },
            "ap-northeast-1": {
                "AMZNLINUX2HVM": "ami-8fbab2f3",
                "CENTOS7HVM": "ami-8e8847f1"
            },
            "ap-northeast-2": {
                "AMZNLINUX2HVM": "ami-96b916f8",
                "CENTOS7HVM": "ami-bf9c36d1"
            },
            "ap-south-1": {
                "AMZNLINUX2HVM": "ami-07eb707f",
                "CENTOS7HVM": "ami-1780a878"
            },
            "ap-southeast-1": {
                "AMZNLINUX2HVM": "ami-3eb0e942",
                "CENTOS7HVM": "ami-8e0205f2"
            },
            "ap-southeast-2": {
                "AMZNLINUX2HVM": "ami-8267abe0",
                "CENTOS7HVM": "ami-d8c21dba"
            },
            "ca-central-1": {
                "AMZNLINUX2HVM": "ami-e8a0268c",
                "CENTOS7HVM": "ami-e802818c"
            },
            "eu-central-1": {
                "AMZNLINUX2HVM": "ami-b144195a",
                "CENTOS7HVM": "ami-dd3c0f36"
            },
            "eu-west-1": {
                "AMZNLINUX2HVM": "ami-38c09341",
                "CENTOS7HVM": "ami-3548444c"
            },
            "eu-west-2": {
                "AMZNLINUX2HVM": "ami-b98667de",
                "CENTOS7HVM": "ami-00846a67"
            },
            "eu-west-3": {
                "AMZNLINUX2HVM": "ami-bf17a1c2",
                "CENTOS7HVM": "ami-262e9f5b"
            },
            "sa-east-1": {
                "AMZNLINUX2HVM": "ami-7f712613",
                "CENTOS7HVM": "ami-cb5803a7"
            },
            "us-east-1": {
                "AMZNLINUX2HVM": "ami-f973ab84",
                "CENTOS7HVM": "ami-9887c6e7"
            },
            "us-east-2": {
                "AMZNLINUX2HVM": "ami-31c7f654",  
                "CENTOS7HVM": "ami-9c0638f9"
            },
            "us-west-1": {
                "AMZNLINUX2HVM": "ami-be4051de",
                "CENTOS7HVM": "ami-4826c22b"
            },
            "us-west-2": {
                "AMZNLINUX2HVM": "ami-07eb707f",
                "CENTOS7HVM": "ami-3ecc8f46"
            }
        },
        "LinuxAMINameMap": {
            "Amazon-Linux-2-HVM": {
                "Code": "AMZNLINUX2HVM"
            },
            "CentOS-7-HVM": {
                "Code": "CENTOS7HVM"
            }
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must exist in the VPC"
                }
            ]
        }
    },
    "Resources" : {
        "MessagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "CellLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "ConsoleProxyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "vCloudContainerDebugLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "vCDAccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
            "AssumeRolePolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": [ "ec2.amazonaws.com" ]
                    },
                    "Action": [ "sts:AssumeRole" ]
                } ]
            },
            "Path": "/"
            }
        },
        "S3AccessPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
            "PolicyName": "s3-Access",
            "PolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Action": [
                        "s3:GetObject",
                        "s3:PutObject"
                    ],
                    "Resource": "*"
                } ]
            },
            "Roles": [ { "Ref": "vCDAccessRole" } ]
            }
        },
        "EC2DescribePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
            "PolicyName": "EC2-Describe",
            "PolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Action": "ec2:Describe*",
                    "Resource": "*"
                } ]
            },
            "Roles": [ { "Ref": "vCDAccessRole" } ]
            }
        },
        "CloudWatchPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
            "PolicyName": "CloudWatch-Access",
            "PolicyDocument": {
                "Statement": [ {
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogStream",
                        "logs:GetLogEvents",
                        "logs:PutLogEvents",
                        "logs:DescribeLogGroups",
                        "logs:DescribeLogStreams",
                        "logs:PutRetentionPolicy",
                        "logs:PutMetricFilter",
                        "logs:CreateLogGroup"
                    ],
                    "Resource": [
                        "arn:aws:logs:*:*:*"
                    ]
                } ]
            },
            "Roles": [ { "Ref": "vCDAccessRole" } ]
            }
        },
        "vCDInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "vCDAccessRole"
                    }
                ],
                "Path": "/"
            }
        },
        "CellsAccessSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables Access between vCD EC2 Instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                            "", [
                                {
                                "Ref": "AWS::StackName"
                                },
                                "-SG"
                            ]
                            ]
                        }
                    }
                ]
            }
        },
        "CellsAccessSecurityGroupIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "DependsOn": "CellsAccessSecurityGroup",
            "Properties": {
                "GroupId": {
                    "Ref": "CellsAccessSecurityGroup"
                },
                "IpProtocol": "-1",
                "FromPort": "0",
                "ToPort": "65535",
                "SourceSecurityGroupId": {"Ref": "CellsAccessSecurityGroup"}
            }
        },
        "CellsAccessSecurityGroupIngress2": {
           "Type": "AWS::EC2::SecurityGroupIngress",
           "DependsOn": "CellsAccessSecurityGroup",
           "Properties": {
                "GroupId": {
                    "Ref": "CellsAccessSecurityGroup"
                },
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "tcp",
                "FromPort": "8443",
                "ToPort": "8443"
            }
        },
        "vCDMain": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "vCDAccessRole"
                        },
                        "buckets": [ "vcd-cf-templates" ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/vcd_main_bootstrap.sh": {
                                "source": "https://s3-us-west-2.amazonaws.com/vcd-cf-templates/dev/vcd_main_bootstrap.sh",
                                "mode": "000550",
                                "owner": "root",
                                "group": "root",
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "b-bootstrap": {
                                "command": "./tmp/vcd_main_bootstrap.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "LinuxAMINameMap",
                                {
                                    "Ref": "EC2AMIOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "Monitoring" : "true",
                "BlockDeviceMappings": [
                    {
                      "DeviceName": "/dev/xvda",
                      "Ebs": {
                        "VolumeType": "gp2",
                        "DeleteOnTermination": "true",
                        "VolumeSize": {
                            "Ref": "MainVcdVolumeSize"
                        }
                      }
                    }
                ],
                "InstanceType": {
                    "Ref": "MainVcdInstanceType"
                },
                "IamInstanceProfile": {
                    "Ref": "vCDInstanceProfile"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "PrivateInstanceSecurityGroupID"
                    },
                    {
                        "Ref": "xFerAccessSecurityGroupID"
                    },
                    {
                        "Ref": "RDSAccessSecurityGroupID"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairNameEC2"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1ID"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y\n",
                                "yum install -y epel-release\n",
                                "yum install nfs-utils lvm2 python-pip rpm-build postgresql automake fuse fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel git alsa-lib libICE libSM libX11 libXau libXdmcp libXext libXi libXt libXtst pciutils redhat-lsb wget -y\n",
                                "pip install --upgrade pip\n",
                                "pip install awscli --ignore-installed six\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "vCDBuildBucketName=",
                                {
                                    "Ref": "vCDBuildBucketName"
                                },
                                "\n",
                                "vCDBuildName=",
                                {
                                    "Ref": "vCDBuildName"
                                },
                                "\n",
                                "vCDKeystoreFileName=",
                                {
                                    "Ref": "vCDKeystoreFileName"
                                },
                                "\n",
                                "vCDCertKeystorePasswd=",
                                {
                                    "Ref": "vCDCertKeystorePasswd"
                                },
                                "\n",
                                "DBEndpoint=",
                                {
                                    "Ref": "DBEndpoint"
                                },
                                "\n",
                                "DBName=",
                                {
                                    "Ref": "DBName"
                                },
                                "\n",
                                "DBMasterUsername=",
                                {
                                    "Ref": "DBMasterUsername"
                                },
                                "\n",
                                "DBMasterUserPassword=",
                                {
                                    "Ref": "DBMasterUserPassword"
                                },
                                "\n",
                                "vCDAdminEmail=",
                                {
                                    "Ref": "vCDAdminEmail"
                                },
                                "\n",
                                "vCDAdminFullName=",
                                {
                                    "Ref": "vCDAdminFullName"
                                },
                                "\n",
                                "vCDInstalationId=",
                                {
                                    "Ref": "vCDInstalationId"
                                },
                                "\n",
                                "vCDAdminPasswd=",
                                {
                                    "Ref": "vCDAdminPasswd"
                                },
                                "\n",
                                "vCDSystemName=",
                                {
                                    "Ref": "vCDSystemName"
                                },
                                "\n",
                                "vCDSerialNumber=",
                                {
                                    "Ref": "vCDSerialNumber"
                                },
                                "\n",
                                "vCDAdmin=",
                                {
                                    "Ref": "vCDAdmin"
                                },
                                "\n",
                                "MessagesLogGroup=",
                                {
                                    "Ref": "MessagesLogGroup"
                                },
                                "\n",
                                "CellLogGroup=",
                                {
                                    "Ref": "CellLogGroup"
                                },
                                "\n",
                                "ConsoleProxyLogGroup=",
                                {
                                    "Ref": "ConsoleProxyLogGroup"
                                },
                                "\n",
                                "vCloudContainerDebugLogGroup=",
                                {
                                    "Ref": "vCloudContainerDebugLogGroup"
                                },           
                                "\n",
                                "cfn-init -v --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vCDMain --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "cfn-signal -e $? --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vCDMain --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "vCDMain"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT30M"
                }
            }
        }
    },
    "Outputs": {
        "vCDMain" : {
            "Description" : "vCDMain Private IP",
            "Value" : {
            "Fn::GetAtt" : ["vCDMain", "PrivateIp"]
            }
        },
        "CellsAccessSecurityGroupID": {
            "Description": "Cells Access Security Group ID",
            "Value": {
                "Ref": "CellsAccessSecurityGroup"
            }
        },
        "MessagesLogGroup": {
            "Value": {
                "Ref": "MessagesLogGroup"
            },
            "Description": "CloudWatch Logs GroupName. /var/log/messages logs will be stored here."
        },
        "CellLogGroup": {
            "Value": {
                "Ref": "CellLogGroup"
            },
            "Description": "CloudWatch Logs GroupName. vCD cell.log logs will be stored here."
        },
        "ConsoleProxyLogGroup": {
            "Value": {
                "Ref": "ConsoleProxyLogGroup"
            },
            "Description": "CloudWatch Logs GroupName. vCD console-proxy.log logs will be stored here."
        },
        "vCloudContainerDebugLogGroup": {
            "Value": {
                "Ref": "vCloudContainerDebugLogGroup"
            },
            "Description": "CloudWatch Logs GroupName. vCD vcloud-container-debug.log logs will be stored here."
        }
    }
}
