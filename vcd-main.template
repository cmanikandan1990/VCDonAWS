{
   "AWSTemplateFormatVersion" : "2010-09-09",
   "Metadata": {
       "AWS::CloudFormation::Interface": {
           "ParameterGroups": [
               {
                   "Label": {
                       "default": "Network Configuration"
                   },
                   "Parameters": [
                       "VPCID",
                       "PrivateSubnet1"
                   ]
               },
               {
                   "Label": {
                       "default": "Main vCD Cell Configuration"
                   },
                   "Parameters": [
                       "KeyPairNameEC2",
                       "EC2AMIOS",
                       "MainVcdInstanceType",
                       "PrivateInstanceSecurityGroupID",
                       "RDSAccessSecurityGroupID"
                   ]
               },
               {
                   "Label": {
                       "default": "vCD Binaries Details"
                   },
                   "Parameters": [
                       "vCDBuildBucketName",
                       "vCDBuildName"
                   ]
               },
               {
                   "Label": {
                       "default": "vCD Instance DB Configuration"
                   },
                   "Parameters": [
                       "DBEndpoint",
                       "DBName",
                       "DBMasterUsername",
                       "DBMasterUserPassword"
                   ]
               },
               {
                   "Label": {
                       "default": "vCD Instance Configuration"
                   },
                   "Parameters": [
                       "vCDAdmin",
                       "vCDAdminFullName",
                       "vCDAdminPasswd",
                       "vCDAdminEmail",
                       "vCDSystemName",
                       "vCDInstalationId",
                       "vCDSerialNumber",
                       "VcdCertKeystorePasswd"
                   ]
               }
           ],
           "ParameterLabels": {
               "KeyPairNameEC2": {
                   "default": "Key Pair Name for vCD/xFer EC2 Instances"
               },
               "EC2AMIOS": {
                   "default": "vCD/xFer EC2 AMI Operating System"
               },
               "MainVcdCellType": {
                   "default": "vCD EC2 Instance Type"
               },
               "PrivateSubnet1": {
                   "default": "Private Subnet 1"
               },
               "VPCID": {
                   "default": "VPC ID"
               },
               "PrivateInstanceSecurityGroupID": {
                   "default": "Security Group to Allow SSH Access from Bastion hosts"
               },
               "RDSAccessSecurityGroupID": {
                   "default": "Security Group to Allow Access the vCD Postgres Database"
               },
               "vCDBuildBucketName" : {
                 "default" : "S3 Bucket Name"
               },
               "vCDBuildName" : {
                 "default" : "vCD Binary"
               },
               "DBEndpoint" : {
                 "default" : "RDS Endpoint"
               },
               "DBName" : {
                 "default" : "RDS database name"
               },
               "DBMasterUsername" : {
                 "default" : "RDS Master Username"
               },
               "DBMasterUserPassword" : {
                 "default" : "RDS Master User Password"
               },
               "VcdCertKeystorePasswd" : {
                 "default" : "Keystore Password"
               },
               "vCDAdmin" : {
                 "default" : "The system administrator's username"
               },
               "vCDAdminFullName" : {
                 "default" : "The system administrator's full name"
               },
               "vCDAdminPasswd" : {
                 "default" : "The system administrator password"
               },
               "vCDAdminEmail" : {
                 "default" : "The system administrator's email address."
               },
               "vCDSystemName" : {
                 "default" : "System name."
               },
               "vCDInstalationId" : {
                 "default" : "Installation ID for this instance."
               },
               "vCDSerialNumber" : {
                 "default" : "License Key."
               }
           }
       }
   },
   "Parameters": {
       "KeyPairNameEC2": {
           "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
           "Type": "AWS::EC2::KeyPair::KeyName"
       },
       "EC2AMIOS": {
           "AllowedValues": [
               "Amazon-Linux-HVM",
               "CentOS-7-HVM"
           ],
           "Default": "Amazon-Linux-HVM",
           "Description": "The Linux distribution for the AMI to be used for the EC2 instances",
           "Type": "String"
       },
       "MainVcdCellType": {
           "AllowedValues": [
               "t2.small",
               "m5.large",
               "m5.xlarge"
           ],
           "Default": "m5.large",
           "Description": "Amazon EC2 instances type",
           "Type": "String"
       },
       "PrivateSubnet1": {
           "Description": "ID of the public subnet 1 that you want to provision the EC2 insteaces in the first AZ (e.g., subnet-a0246dcd)",
           "Type": "AWS::EC2::Subnet::Id"
       },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "PrivateInstanceSecurityGroupID": {
            "Description": "Security Group to Allow SSH Access from Bastion hosts",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "RDSAccessSecurityGroupID": {
            "Description": "Security Group to Allow Access RDS Database",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "vCDBuildBucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "vcd-builds",
            "Description": "Bucket name that holds the VCD build to be used by this stack.",
            "Type": "String"
        },
        "vCDBuildName": {
            "Default": "vmware-vcloud-director-distribution-9.0.0-7554058.bin",
            "Description": "Specify the vCD binary filename name.",
            "Type": "String"
        },
        "DBEndpoint": {
          "Description": "vCD Postgres DB Endpoint Address.",
          "Type": "String"
        },
        "DBName": {
          "Default": "vcddb",
          "Description" : "vCD Postgres database name",
          "Type": "String",
          "MinLength": "1",
          "MaxLength": "16"
        },
        "DBMasterUsername": {
          "Description": "Database administration name. First character must be a letter and can not be 'root'.",
          "Type": "String",
          "Default": "dbmaster"
        },
        "DBMasterUserPassword": {
          "NoEcho": "true",
          "Description": "Database administration password. Minimum of 8 alphanumeric characters.",
          "Type": "String",
          "MinLength": "8"
        },
        "VcdCertKeystorePasswd": {
          "NoEcho": "true",
          "Description": "vCD Certificates Keystore Password. Minimum of 8 alphanumeric characters.",
          "Type": "String",
          "MinLength": "8"
        },
        "vCDAdmin": {
          "Description": "The username of the system administrator user you are creating.",
          "Type": "String",
          "Default": "vcd_admin"
        },
        "vCDAdminFullName": {
          "Description": "The full name of the system administrator user you are creating.",
          "Type": "String",
          "Default": "vCD Administrator Name"
        },
        "vCDAdminPasswd": {
          "NoEcho": "true",
          "Description": "The password for the system administrator user you are creating.",
          "Type": "String",
          "MinLength": "8"
        },
        "vCDAdminEmail": {
          "Description": "The e-mail address for the system administrator you are creating.",
          "Type": "String",
          "Default": "vcd_admin@company.com"
        },
        "vCDSystemName": {
          "Description": "",
          "Type": "String",
          "Default": "vCD System Name"
        },
        "vCDInstalationId": {
          "Description": "The installation ID for this installation of vCloud Director.",
          "Type": "String",
          "MinLength": "1",
          "MaxLength": "2",
          "AllowedPattern" : "[1-6][0-9]*",
          "Default": "1",
          "ConstraintDescription" : "Must be an integer in the range 1-63."
        },
        "vCDSerialNumber": {
          "Description": "The serial number (license key) for this vCD Instance.",
          "Type": "String"
        }
   },
   "Mappings": {
       "AWSAMIRegionMap": {
           "AMI": {
               "AMZNLINUXHVM": "amzn-ami-hvm-2017.09.1.20171120-x86_64-gp2",
               "CENTOS7HVM": "CentOS Linux 7 x86_64 HVM EBS 1708_11.01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-95096eef.4"
           },
           "us-east-1": {
               "AMZNLINUXHVM": "ami-55ef662f",
               "CENTOS7HVM": "ami-02e98f78"
           },
           "us-east-2": {
               "AMZNLINUXHVM": "ami-15e9c770",
               "CENTOS7HVM": "ami-e0eac385"
           },
           "us-west-1": {
               "AMZNLINUXHVM": "ami-a51f27c5",
               "CENTOS7HVM": "ami-b1a59fd1"
           },
           "us-west-2": {
               "AMZNLINUXHVM": "ami-bf4193c7",
               "CENTOS7HVM": "ami-b63ae0ce"
           }
       },
       "LinuxAMINameMap": {
           "Amazon-Linux-HVM": {
               "Code": "AMZNLINUXHVM"
           },
           "CentOS-7-HVM": {
               "Code": "CENTOS7HVM"
           }
       }
   },
   "Rules": {
       "SubnetsInVPC": {
           "Assertions": [
               {
                   "Assert": {
                       "Fn::EachMemberIn": [
                           {
                               "Fn::ValueOfAll": [
                                   "AWS::EC2::Subnet::Id",
                                   "VpcId"
                               ]
                           },
                           {
                               "Fn::RefAll": "AWS::EC2::VPC::Id"
                           }
                       ]
                   },
                   "AssertDescription": "All subnets must exist in the VPC"
               }
           ]
       }
   },
   "Resources" : {
     "xFerS3AccessRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
           "AssumeRolePolicyDocument": {
              "Statement": [ {
                 "Effect": "Allow",
                 "Principal": {
                    "Service": [ "ec2.amazonaws.com" ]
                 },
                 "Action": [ "sts:AssumeRole" ]
              } ]
           },
           "Path": "/"
        }
     },
     "xFerS3AccessPolicies": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
           "PolicyName": "xFer-S3-AccessPerms",
           "PolicyDocument": {
              "Statement": [ {
                 "Effect": "Allow",
                 "Action": "s3:*",
                 "Resource": "*"
              } ]
           },
           "Roles": [ { "Ref": "xFerS3AccessRole" } ]
        }
     },
     "S3AccessHostProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
             "Roles": [
                 {
                     "Ref": "xFerS3AccessRole"
                 }
             ],
             "Path": "/"
         }
     },
     "xFerBucket" : {
       "Type" : "AWS::S3::Bucket",
       "Properties" : {
         "BucketName": { "Fn::Join" : ["", [ { "Ref" : "VPCID" }, "-xfer" ]
         ] }
       }
     },
     "CellsAccessSecurityGroup": {
         "Type": "AWS::EC2::SecurityGroup",
         "Properties": {
             "GroupDescription": "Enables Access between vCD EC2 Instances",
             "VpcId": {
                 "Ref": "VPCID"
             },
             "Tags": [
               {
                 "Key": "Name",
                 "Value": {
                     "Fn::Join": [
                       "", [
                         {
                           "Ref": "AWS::StackName"
                         },
                         "-SG"
                       ]
                     ]
                 }
               }
             ]
         }
     },
     "CellsAccessSecurityGroupIngress": {
         "Type": "AWS::EC2::SecurityGroupIngress",
         "DependsOn": "CellsAccessSecurityGroup",
         "Properties": {
             "GroupId": {
                 "Ref": "CellsAccessSecurityGroup"
             },
             "IpProtocol": "-1",
             "FromPort": "0",
             "ToPort": "65535",
             "SourceSecurityGroupId": {"Ref": "CellsAccessSecurityGroup"}
       }
     },
      "vCDMain": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": {
              "Fn::FindInMap": [
                  "AWSAMIRegionMap",
                  {
                      "Ref": "AWS::Region"
                  },
                  {
                      "Fn::FindInMap": [
                          "LinuxAMINameMap",
                          {
                              "Ref": "EC2AMIOS"
                          },
                          "Code"
                      ]
                  }
              ]
          },
          "InstanceType": {
              "Ref": "MainVcdCellType"
          },
          "IamInstanceProfile": {
              "Ref": "S3AccessHostProfile"
          },
          "SecurityGroupIds": [
              {
                  "Ref": "PrivateInstanceSecurityGroupID"
              },
              {
                  "Ref": "CellsAccessSecurityGroup"
              },
              {
                  "Ref": "RDSAccessSecurityGroupID"
              }
          ],
          "KeyName": {
              "Ref": "KeyPairNameEC2"
          },
          "SubnetId": {
              "Ref": "PrivateSubnet1"
          },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash\n",
                  "# Defina Variables\n",
                  "vCDBuildBucketName=", {"Ref": "vCDBuildBucketName"}, "\n",
                  "vCDBuildName=", {"Ref": "vCDBuildName"}, "\n",
                  "DBEndpoint=", {"Ref": "DBEndpoint"}, "\n",
                  "DBName=", {"Ref": "DBName"}, "\n",
                  "DBMasterUsername=", {"Ref": "DBMasterUsername"}, "\n",
                  "DBMasterUserPassword=", {"Ref": "DBMasterUserPassword"}, "\n",
                  "VcdCertKeystorePasswd=", {"Ref": "VcdCertKeystorePasswd"}, "\n",
                  "vCDAdmin=", {"Ref": "vCDAdmin"}, "\n",
                  "vCDAdminFullName=", {"Ref": "vCDAdminFullName"}, "\n",
                  "vCDAdminPasswd=", {"Ref": "vCDAdminPasswd"}, "\n",
                  "vCDAdminEmail=", {"Ref": "vCDAdminEmail"}, "\n",
                  "vCDSystemName=", {"Ref": "vCDSystemName"}, "\n",
                  "vCDInstalationId=", {"Ref": "vCDInstalationId"}, "\n",
                  "vCDSerialNumber=", {"Ref": "vCDSerialNumber"}, "\n",
                  "# Update GuestOS\n",
                  "yum update -y\n",
                  "# Install necessary packages\n",
                  "yum install automake fuse fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel nfs-utils nfs-utils-lib redhat-lsb python36 python36-pip python36-devel -y\n",
                  "# Install PIP\n",
                  "easy_install-3.6 pip\n",
                  "# Install vCD Cli\n",
                  "/usr/local/bin/pip3 install --user vcd-cli\n",
                  "# Clone S3FS repository from Git\n",
                  "cd /home/ec2-user\n",
                  "git clone https://github.com/s3fs-fuse/s3fs-fuse.git\n",
                  "# Compile S3FS\n",
                  "cd /home/ec2-user/s3fs-fuse\n",
                  "./autogen.sh\n",
                  "./configure --prefix=/usr --with-openssl\n",
                  "make\n",
                  "make install\n",
                  "# Create vCD Transfer directory\n",
                  "mkdir -p /opt/vmware/vcloud-director/data/transfer\n",
                  "# Add S3 bucket mount point to fstab\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "echo 's3fs#",
                        {
                          "Ref": "xFerBucket"
                        },
                        " /opt/vmware/vcloud-director/data/transfer fuse _netdev,allow_other,iam_role=auto,uid=501,gid=501 0 0' >> /etc/fstab"
                      ]
                    ]
                  },
                  "\n",
                  "# Copy vCD binaries from specified S3 Bucket\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "aws s3 cp s3://",
                        {
                          "Ref": "vCDBuildBucketName"
                        },
			                  "/",
			                  {
                          "Ref": "vCDBuildName"
                        },
			                  " /tmp/",
			                  {
                          "Ref": "vCDBuildName"
                        }
                      ]
                    ]
                  },
                  "\n",
                  "# Make vCD binaries executable\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "chmod +x /tmp/",
                        {
                          "Ref": "vCDBuildName"
                        }
                      ]
                    ]
                  },
                  "\n",
                  "# Install vCD\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "echo Y | /tmp/",
                        {
                          "Ref": "vCDBuildName"
                        }
                      ]
                    ]
                  },
                  "\n",
                  "# Mount the S3 Bucket\n",
                  "mount /opt/vmware/vcloud-director/data/transfer/\n",
                  "sleep 5\n",
                  "# Generate Self-signed certificate for vCD\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "/opt/vmware/vcloud-director/bin/cell-management-tool generate-certs -j -p -o /tmp/certificates.ks -w ",
                        {
                          "Ref": "VcdCertKeystorePasswd"
                        }
                      ]
                    ]
                  },
                  "\n",
                  "# Update Permission on Certificates Keystore file\n",
                  "chmod 644 /tmp/certificates.ks\n",
                  "# Get Instance IP Address \n",
                  "ip=$(ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}')\n",
                  "# Configure vCD Cell\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "echo Y | /opt/vmware/vcloud-director/bin/configure -cons $ip --console-proxy-port-https 8443 -ip $ip --primary-port-http 80 --primary-port-https 443 -dbhost ",
                        {
                          "Ref": "DBEndpoint"
                        },
                  			" -dbport 5432 -dbtype postgres -dbname ",
                  			{
                          "Ref": "DBName"
                        },
                  			" -dbuser ",
                  			{
                          "Ref": "DBMasterUsername"
                        },
                  			" -dbpassword ",
                  			{
                          "Ref": "DBMasterUserPassword"
                        },
                  			" -k /tmp/certificates.ks -w ",
                  			{
                          "Ref": "VcdCertKeystorePasswd"
                        },
			                  " -unattended"
                      ]
                    ]
                  },
                  "\n",
                  "cat >> /opt/vmware/vcloud-director/etc/global.properties <<- EOF\n",
                  "#Custom Changes Made for console proxy and DB connections\n",
                  "consoleproxy.websockets.enabled = true\n",
                  "consoleproxy.securenio.buffer.size = 17000\n",
                  "database.pool.maxActive = 200\n",
                  "vcloud.http.maxThreads = 150\n",
                  "vcloud.http.minThreads = 32\n",
                  "vcloud.http.acceptorThreads = 16\n",
                  "hibernate.generate_statistics=true\n",
                  "EOF\n",
                  "# Start NFS Services\n",
                  "service rpcbind start\n",
                  "service nfs start\n",
                  "# Initial vCD Instance Configuration\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "/opt/vmware/vcloud-director/bin/cell-management-tool system-setup --email ",
                        {
                          "Ref": "vCDAdminEmail"
                        },
			                  " --full-name '",
			                  {
                          "Ref": "vCDAdminFullName"
                        },
                  			"' --installation-id ",
                  			{
                          "Ref": "vCDInstalationId"
                        },
                  			" --password ",
                  			{
                          "Ref": "vCDAdminPasswd"
                        },
                  			" --system-name '",
                  			{
                          "Ref": "vCDSystemName"
                        },
                  			"' --serial-number ",
                  			{
                          "Ref": "vCDSerialNumber"
                        },
                  			" --user ",
                  			{
                          "Ref": "vCDAdmin"
                        },
			                  " -unattended"
                      ]
                    ]
                  },
                  "\n",
                  "# Start vCD Services\n",
                  "service vmware-vcd start\n",
                  "sleep 120\n",
                  "# Create Global Catalog Org\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "/root/.local/bin/vcd login $ip system ",
                        {
                          "Ref": "vCDAdmin"
                        },
                        " -p ",
                        {
                          "Ref": "vCDAdminPasswd"
                        },
                        " -w -i"
                      ]
                    ]
                  },
                  "\n",
                  "/root/.local/bin/vcd org create global_catalog 'Global Catalog Org' -e\n",
                  "# Move vCD binaries to vCD Transfer store\n",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "mv /tmp/",
                        {
                          "Ref": "vCDBuildName"
                        },
                        " /opt/vmware/vcloud-director/data/transfer/",
                        {
                          "Ref": "vCDBuildName"
                        }
                      ]
                    ]
                  },
                  "\n",
                  "# Copy vCD certificates keystore to vCD Transfer store\n",
                  "cp /tmp/certificates.ks /opt/vmware/vcloud-director/data/transfer/certificates.ks\n",
                  "# Copy vCD Response files to vCD Transfer store\n",
                  "cp /opt/vmware/cloud-director/etc/responses.properties /opt/vmware/vcloud-director/data/transfer/responses.properties\n",
                  "# Update Permission on vCD Response file\n",
                  "chmod 644 /opt/vmware/vcloud-director/data/transfer/responses.properties\n"
                ]
              ]
            }
          },
          "Tags": [
              {
                  "Key": "Name",
                  "Value": "vCDMain"
              }
          ]
        }
      }
  },
  "Outputs": {
    "xFerBucketName": {
        "Description": "xFer S3 Bucket Name",
        "Value": {
            "Ref": "xFerBucket"
        }
    },
    "xFerBucketDomainName" : {
      "Description" : "xFer S3 Bucket Domain Name",
      "Value" : {
        "Fn::GetAtt" : ["xFerBucket", "DomainName"]
      }
    },
    "vCDMain" : {
      "Description" : "vCDMain Private IP",
      "Value" : {
        "Fn::GetAtt" : ["vCDMain", "PrivateIp"]
      }
    },
    "CellsAccessSecurityGroupID": {
        "Description": "Cells Access Security Group ID",
        "Value": {
            "Ref": "CellsAccessSecurityGroup"
        }
    }
  }
}
